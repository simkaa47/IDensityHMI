<UserControl x:Class="IDensity.Core.Views.UserControls.MeasProcesses.MeasProcMain"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:IDensity.ViewModels"
             
             xmlns:conv="clr-namespace:IDensity.Core.Views.Converters"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:p="clr-namespace:IDensity.Core.Views.UserControls.Parameters"
             xmlns:local="clr-namespace:IDensity.Core.Views.UserControls.MeasProcesses"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=vm:MeasProcessVm}"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid> 
        <ListBox HorizontalContentAlignment="Stretch"  Width="687" 
                 HorizontalAlignment="Left" 
                 Background="Transparent"
                 BorderThickness="0"
                 VerticalAlignment="Top"
                 ItemContainerStyle="{StaticResource   ParameterListBoxItem}">            
            <ListBox.Resources>                
                <conv:PipeDiameterConverter x:Key="PipeDiameterVisibilityConverter"/>
            </ListBox.Resources>            

            <!--#region Counter Number -->
            <p:TextParameter DataContext="{Binding SelectedProcess.MeasProcCounterNum}"
                             Command="{Binding RelativeSource={RelativeSource AncestorType=local:MeasProcMain}, Path=DataContext.WriteCounterNumCommand}"/>
            <!--#endregion-->
            <!--#region Measuring Duration -->
            <p:TextParameter DataContext="{Binding SelectedProcess.MeasDuration}"
                             Command="{Binding RelativeSource={RelativeSource AncestorType=local:MeasProcMain}, Path=DataContext.WriteMeasDurationCommand}"/>
            <!--#endregion-->
            <!--#region Measuring Deep -->
            <p:TextParameter DataContext="{Binding SelectedProcess.MeasDeep}"
                             Command="{Binding RelativeSource={RelativeSource AncestorType=local:MeasProcMain}, Path=DataContext.WriteMeasDeepCommand}"/>
            <!--#endregion-->
            <!--#region Measuring Type -->
            <p:CompoBoxParameter DataContext="{Binding SelectedProcess.MeasType}"
                                 Index="{Binding WriteValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                 Command="{Binding RelativeSource={RelativeSource AncestorType=local:MeasProcMain}, Path=DataContext.ChangeMeasTypeCommand}">
                <p:CompoBoxParameter.ItemsSource>
                    <MultiBinding Converter="{StaticResource Multiselector}">
                        <Binding RelativeSource="{RelativeSource AncestorType=Window}" Path="DataContext.mainModel.DeviceType.Value"/>
                        <Binding Source="{StaticResource DensityCalculationArrList}"/>
                        <Binding Source="{StaticResource LevelCalculationArrList}"/>
                    </MultiBinding>
                </p:CompoBoxParameter.ItemsSource>
            </p:CompoBoxParameter>
            <!--#endregion-->
            <!--#region Fast Change Activity -->
            <p:CheckParameter DataContext="{Binding SelectedProcess.FastChange.Activity}"
                              Command="{Binding RelativeSource={RelativeSource AncestorType=local:MeasProcMain}, Path=DataContext.WriteFastChangeActivityCommand}"/>
            <!--#endregion-->
            <!--#region Fast Change Threshold -->
            <p:TextParameter DataContext="{Binding SelectedProcess.FastChange.Threshold}"
                             Command="{Binding RelativeSource={RelativeSource AncestorType=local:MeasProcMain}, Path=DataContext.WriteFastChangeThresholdCommand}"/>
            <!--#endregion-->
            <!--#region Pipe diameter -->
            <ListBoxItem>
                <ListBoxItem.Visibility>
                    <MultiBinding Converter="{StaticResource PipeDiameterVisibilityConverter}">
                        <Binding Path="Value"/>
                        <Binding RelativeSource="{RelativeSource AncestorType=Window}" Path="DataContext.CurUser"/>
                    </MultiBinding>
                </ListBoxItem.Visibility>
                <p:TextParameter DataContext="{Binding SelectedProcess.PipeDiameter}"
                             Command="{Binding RelativeSource={RelativeSource AncestorType=local:MeasProcMain}, Path=DataContext.WritePipeDiameterCommand}">

                </p:TextParameter>
            </ListBoxItem>
            
            <!--#endregion-->
            <!--#region Meas Proc Activity -->
            <p:CheckParameter DataContext="{Binding SelectedProcess.IsActive}"
                              Command="{Binding RelativeSource={RelativeSource AncestorType=local:MeasProcMain}, Path=DataContext.WriteActivityCommand}"/>
            <!--#endregion-->
            <!--#region Attenuatuin coeefs -->
            <p:TextParameter DataContext="{Binding SelectedProcess.AttCoeffs[0]}"
                             Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MeasProcessVm.WriteAttenuationCommand}"/>
           
            
            <p:TextParameter DataContext="{Binding SelectedProcess.AttCoeffs[1]}"
                                  Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MeasProcessVm.WriteAttenuationCommand}"/>
            <!--#endregion-->
            <!--#region Volume Coeefs -->
            <ListBoxItem Visibility="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.mainModel.DeviceType.Value, Converter={StaticResource VisibleIfEqual}, ConverterParameter=1}">
                <GroupBox Style="{StaticResource GroupBoxTrendStyle}">
                    <GroupBox.Header>
                        <TextBlock Text="Коэффициенты обьема" Style="{StaticResource Common}"/>
                    </GroupBox.Header>
                    <ListBox HorizontalContentAlignment="Stretch" Background="Transparent" ItemContainerStyle="{StaticResource   ParameterListBoxItem}"
                             BorderThickness="0">
                        <p:TextParameter DataContext="{Binding SelectedProcess.VolumeCoeefs[0]}" Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MeasProcessVm.WriteVolumeCoeffsCommand}"/>
                        <p:TextParameter DataContext="{Binding SelectedProcess.VolumeCoeefs[1]}" Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MeasProcessVm.WriteVolumeCoeffsCommand}"/>
                        <p:TextParameter DataContext="{Binding SelectedProcess.VolumeCoeefs[2]}" Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MeasProcessVm.WriteVolumeCoeffsCommand}"/>
                        <p:TextParameter DataContext="{Binding SelectedProcess.VolumeCoeefs[3]}" Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MeasProcessVm.WriteVolumeCoeffsCommand}"/>
                    </ListBox>
                </GroupBox>
            </ListBoxItem>
            <!--#endregion-->
            <!--#region Calculation type -->
            <p:CompoBoxParameter DataContext="{Binding SelectedProcess.CalculationType}"
                                 Index="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MeasProcessVm.WriteCalcTypeCommand}"
                                 ItemsSource="{StaticResource CalcTypes}"/>
            <!--#endregion-->
            <!--#region Copy to other process -->
            <DockPanel MinHeight="56">
                <TextBlock Text="Скопировать на другой измерительный процесс"
                           Style="{StaticResource Common}" Margin="20,0,0,0"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <ComboBox Name="MeasNumSelector"  ItemsSource="{StaticResource  MeasProcNums}" Style="{StaticResource ComboboxParameterStyle}"                              
                              FontSize="16"
                              BorderBrush="{Binding IsWriting, Converter={StaticResource GetIfTrue}, ConverterParameter={StaticResource CompoboxBorderBrushes}}"
                              Height="40"
                              VerticalContentAlignment="Center"
                              Background="Transparent"
                              Width="165"
                              SelectedIndex="0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="DropDownClosed">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MeasProcessVm.CopyMeasProcessCommand}"
                                    CommandParameter="{Binding ElementName=MeasNumSelector, Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                   
                    <Border Height="24" Width="40" Margin="25,0,20,0" CornerRadius="4"
                    Background="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MeasProcessVm.IsWriting, Converter={StaticResource GetIfTrue}, ConverterParameter={StaticResource ButtonsParametersColors}}">
                        <Image Source="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MeasProcessVm.IsWriting, Converter={StaticResource GetIfTrue}, ConverterParameter={StaticResource ButtonsParametersImages}}"
                       HorizontalAlignment="Center" Height="24" Width="24"/>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MeasProcessVm.CopyMeasProcessCommand}"
                                    CommandParameter="{Binding ElementName=MeasNumSelector, Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Border>
                </StackPanel>
            </DockPanel>
            <!--#endregion-->
           
        </ListBox>    
    </Grid>
</UserControl>
