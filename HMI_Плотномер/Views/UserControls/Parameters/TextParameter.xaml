<local:CommandExtention x:Class="IDensity.Core.Views.UserControls.Parameters.TextParameter"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:add="clr-namespace:IDensity.AddClasses"
             xmlns:fa="http://schemas.fontawesome.io/icons/"             
             xmlns:conv="clr-namespace:IDensity.Core.Views.Converters"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:IDensity.Core.Views.UserControls.Parameters"
             mc:Ignorable="d"              
             d:DesignHeight="450" d:DesignWidth="800">
    <local:CommandExtention.Resources>
        <conv:ToStringFormatConverter x:Key="StringFormatConverter"/>
        
        <Style TargetType="TextBlock" BasedOn="{StaticResource Common}"></Style>
    </local:CommandExtention.Resources>
    <DockPanel MinHeight="50">
        <DockPanel.Resources>
            <Style TargetType="Border">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="Aqua"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="BorderBrush" Value="{StaticResource BorderNonActiveColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="TextBox">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource BorderNonActiveColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </DockPanel.Resources>
        <TextBlock Text="{Binding Description}"
                   HorizontalAlignment="Left"
                   Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:TextParameter}, Path=DescriptionNotVisible, Converter={StaticResource VisibleIfEqual}, ConverterParameter=False}"
                   VerticalAlignment="Center"/>
        <StackPanel HorizontalAlignment="Right"
                    Orientation="Horizontal">
            <Border CornerRadius="4"
                    Height="40"
                    Name="Border"                    
                    Width="165"
                    BorderThickness="2"
                    Background="Transparent">
                <TextBox Background="Transparent"
                         Name="Input"
                         IsReadOnly="{Binding RelativeSource={RelativeSource AncestorType=local:TextParameter}, Path=IsOnlyRead}"
                         BorderThickness="0"                                                 
                         FontFamily="Roboto"
                         Margin="10,0,0,0"                         
                         VerticalAlignment="Center"
                         FontSize="16"
                         CaretBrush="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"
                         FontWeight="Regular">
                   
                    <TextBox.InputBindings>
                        <KeyBinding  Key="Enter"   Command="{Binding RelativeSource={RelativeSource AncestorType=local:TextParameter}, Path=Command}" 
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=local:TextParameter}, Path=CommanDParameter }"> 
                           
                        </KeyBinding>
                    </TextBox.InputBindings>
                    <MultiBinding Converter="{StaticResource StringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                         ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                        <Binding Path="WriteValue" StringFormat="N2" Converter="{StaticResource NumericConverter}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule />
                                <ExceptionValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                        <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="StringFormat"/>
                    </MultiBinding>
                </TextBox>
            </Border>
            <fa:ImageAwesome Visibility="{Binding IsWriting, Converter={StaticResource VisibleConverter}}" 
                             Icon="Refresh" HorizontalAlignment="Center" MaxHeight="25"                                             
                             Spin="{Binding IsWriting}"
                             Height="25"
                             Margin="5"
                             Foreground="Aqua"/>
        </StackPanel>
        <DockPanel.ToolTip>
            <ToolTip Placement="MousePoint" BorderThickness="0">
                <StackPanel Background="DarkGray">
                    <TextBlock Text="{Binding Id, StringFormat=Идентификатор параметра: {0}}"/>
                    <TextBlock Text="{Binding MinValue, StringFormat=Минимальное значение: {0}}"/>
                    <TextBlock Text="{Binding MaxValue, StringFormat=Максимальное значение: {0}}"/>
                </StackPanel>
            </ToolTip>
        </DockPanel.ToolTip>
    </DockPanel>
</local:CommandExtention>
