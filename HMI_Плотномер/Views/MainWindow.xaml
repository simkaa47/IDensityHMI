<Window x:Class="IDensity.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"               
        xmlns:vm="clr-namespace:IDensity.ViewModels"       
        xmlns:oxy="http://oxyplot.org/wpf" xmlns:col1="clr-namespace:System.Collections;assembly=System.Runtime.Extensions" xmlns:sys1="clr-namespace:System;assembly=System.Runtime"
        xmlns:wpftool="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:fa="http://schemas.fontawesome.io/icons/"        
        xmlns:add="clr-namespace:IDensity.AddClasses"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:uc="clr-namespace:IDensity.Views.Resourses.UserControls"    
        xmlns:sett="clr-namespace:IDensity.AddClasses.Settings"
        mc:Ignorable="d"         
        Title="MainWindow" Height="450" Width="800"
        Background="DarkSlateGray">
    <Window.Resources>
        
    </Window.Resources>
    <Window.DataContext>
        <vm:VM/>
    </Window.DataContext>    
        <!--#region Страницы -->
        <Grid>
            <!--#region Верхний бар -->
            <Grid>
                <Grid.Resources>
                    <Style TargetType="Border" BasedOn="{StaticResource BorderLight}"/>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource Common}"/>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="0.4*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <!--#region Эмблема заказчика -->
                <Border Grid.Column="0" Margin="5">
                    <Image Source="Resourses/Pictures/konvels_logo_white.png"/>
                </Border>
                <!--#endregion-->
                <!--#region Серийный номер -->
                <Border Grid.Column="1"  Margin="5">
                    <UniformGrid Rows="2">
                        <TextBlock Text="Серийный номер:" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                        <TextBlock Text="000001" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                    </UniformGrid>
                </Border>
                <!--#endregion-->
                <!--#region Индикатор связи с платой -->
                <Border Background="{Binding mainModel.Connecting.Value, Converter={StaticResource ColorToBool}}"  Grid.Column="2" Margin="5">
                    <TextBlock Text="Связь с платой" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                </Border>
                <!--#endregion-->
                <!--#region Индикатор измерений -->
                <Border Grid.Column="3" Margin="5" Background="{Binding mainModel.CycleMeasStatus.Value, Converter={StaticResource ColorToBool}}">
                    <TextBox Text="{Binding mainModel.CycleMeasStatus.Value, Converter={StaticResource StatusFromNum}, ConverterParameter={StaticResource measStatus}}"
                         TextWrapping="Wrap"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center"></TextBox>
                </Border>
                <!--#endregion-->
                <!--#region Индикатор высокого напряжения -->
                <Border Grid.Column="4" Margin="5" Background="{Binding mainModel.TelemetryHV.HvOn.Value, Converter={StaticResource ColorToBool}}">
                    <TextBox Text="{Binding mainModel.TelemetryHV.HvOn.Value, Converter={StaticResource StatusFromNum}, ConverterParameter={StaticResource hvStatus}}"
                         TextWrapping="Wrap"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center"
                         HorizontalContentAlignment="Center"></TextBox>
                </Border>
                <!--#endregion-->
                <!--#region Время и пользователь -->
                <Border Grid.Column="5" Margin="5">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="0.2*"/>
                        </Grid.ColumnDefinitions>
                        <!--#region RTC -->
                        <Viewbox Grid.ColumnSpan="2"  >
                            <TextBlock Text="{Binding mainModel.Rtc.Value, StringFormat=F,   UpdateSourceTrigger=PropertyChanged, ConverterCulture=ru-RU,  Mode=OneWay}"/>
                        </Viewbox>
                        <!--#endregion-->
                        <!--#region Авторизация -->
                        <Button Grid.Row="1" Margin="2"  MouseDoubleClick="Logout_click" HorizontalContentAlignment="Stretch">
                            <Button.ToolTip>Авторизация</Button.ToolTip>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="User" HorizontalAlignment="Left" Margin="5,1,10,1"/>
                                <TextBlock Text="{Binding CurUser, Converter={StaticResource UserToName} }" VerticalAlignment="Center"  HorizontalAlignment="Stretch">
                                </TextBlock>
                            </StackPanel>
                        </Button>
                        <!--#endregion-->
                        <!--#region Логаут -->
                        <Button Grid.Column="1" Command="{Binding LogoutCommand}" Grid.Row="1" Margin="2">
                            <fa:ImageAwesome Icon="Reply"/>
                        </Button>
                        <!--#endregion-->
                    </Grid>
                </Border>
                <!--#endregion-->
                <!--#region Кнопка закрыть приложение -->
                <Button Grid.Column="6" Margin="5" Command="{Binding CloseAppCommand}">
                    <Button.ToolTip>Закрыть приложение</Button.ToolTip>
                    <fa:ImageAwesome Icon="TimesCircle"/>
                </Button>
                <!--#endregion-->
            </Grid>
            <!--#endregion-->        
            <!--#region Вкладки -->
            <TabControl  Grid.Row="1" TabStripPlacement="Bottom" >
                <!--#region Вкладка Измерение -->
                <TabItem Header="ИЗМЕРЕНИЕ">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource Common}"/>
                            <Style TargetType="Border">
                                <Setter Property="BorderBrush" Value="WhiteSmoke"/>
                                <Setter Property="BorderThickness" Value="2"/>
                                <Setter Property="Margin" Value="5"/>
                            </Style>
                        </Grid.Resources>
                        <!--#region Развбивка на 4 части экрана -->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1.5*"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <!--#endregion-->

                        <!--#region Тренды -->
                        <TabControl TabStripPlacement="Bottom">
                            <!--#region Текущй тренд -->
                            <TabItem Header="Текущий тренд">
                                <!--#region Текущий тренд -->
                                <Grid>
                                    <uc:TrendControl DataSource="{Binding PlotCollection}"                                                 
                                                 LineVisibility1="{Binding ElementName=VisibleLine1, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle1="{Binding ElementName=TrendName1, Path=Text}"
                                                 LineVisibility2="{Binding ElementName=VisibleLine2, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle2="{Binding ElementName=TrendName2, Path=Text}"
                                                 LineVisibility3="{Binding ElementName=VisibleLine3, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle3="{Binding ElementName=TrendName3, Path=Text}"
                                                 LineVisibility4="{Binding ElementName=VisibleLine4, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle4="{Binding ElementName=TrendName4, Path=Text}"
                                                 LineVisibility5="{Binding ElementName=VisibleLine5, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle5="{Binding ElementName=TrendName5, Path=Text}"
                                                 LineVisibility6="{Binding ElementName=VisibleLine6, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle6="{Binding ElementName=TrendName6, Path=Text}"
                                                 LineVisibility7="{Binding ElementName=VisibleLine7, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle7="{Binding ElementName=TrendName7, Path=Text}"
                                                 LineVisibility8="{Binding ElementName=VisibleLine8, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle8="{Binding ElementName=TrendName8, Path=Text}"
                                                 LineVisibility9="{Binding ElementName=VisibleLine9, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle9="{Binding ElementName=TrendName9, Path=Text}"
                                                 LineVisibility10="{Binding ElementName=VisibleLine10, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle10="{Binding ElementName=TrendName10, Path=Text}"/>
                                </Grid>
                                <!--#endregion-->
                            </TabItem>
                            <!--#endregion-->
                            <!--#region Настройки отображения -->
                            <TabItem Header="Настройки отображения">
                                <TabItem.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource Common}"/>
                                </TabItem.Resources>
                                <ListBox HorizontalContentAlignment="Stretch">
                                    <!--#region Временоой интервал -->
                                    <ListBoxItem Template="{StaticResource TextBoxParameter}" Tag="Максимальное время отображения, мин" 
                                             Content="{Binding TrendSettings.PlotTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    </ListBoxItem>
                                    <!--#endregion-->
                                    <!--#region Процесс 0 - значение счетчика -->
                                    <DockPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="TrendName1">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource EnumCustomConverter}" StringFormat="{}{0} : Значение счетчика">
                                                        <Binding Path="mainModel.MeasResults[0].MeasProcessNum.Value" Mode="OneWay"/>
                                                        <Binding Path="MeasProcNames.Data" Mode="OneWay"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                            <Rectangle x:Name="trendColor1" Fill="Red" Width="16" Margin="10,0,0,10" Height="16"/>
                                        </StackPanel>
                                        <CheckBox  x:Name="VisibleLine1" IsChecked="{Binding TrendsVisible.VisLine1}" HorizontalAlignment="Right" />
                                    </DockPanel>
                                    <!--#endregion-->
                                    <!--#region Процесс 0 - мгновенное значение -->
                                    <DockPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Name="TrendName2">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource EnumCustomConverter}" StringFormat="{}{0} : Мгновенное значение">
                                                        <Binding Path="mainModel.MeasResults[0].MeasProcessNum.Value" Mode="OneWay"/>
                                                        <Binding Path="MeasProcNames.Data" Mode="OneWay"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                            <Rectangle x:Name="trendColor2" Fill="Blue" Width="16" Margin="10,0,0,10" Height="16"/>
                                        </StackPanel>
                                        <CheckBox  x:Name="VisibleLine2" IsChecked="{Binding TrendsVisible.VisLine2}" HorizontalAlignment="Right" />
                                    </DockPanel>
                                    <!--#endregion-->
                                    <!--#region Процесс 0 - усредненное значение -->
                                    <DockPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Name="TrendName3">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource EnumCustomConverter}" StringFormat="{}{0} : Усредненное значение">
                                                        <Binding Path="mainModel.MeasResults[0].MeasProcessNum.Value" Mode="OneWay"/>
                                                        <Binding Path="MeasProcNames.Data" Mode="OneWay"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                            <Rectangle x:Name="trendColor3" Fill="Green" Width="16" Margin="10,0,0,10" Height="16"/>
                                        </StackPanel>
                                        <CheckBox  x:Name="VisibleLine3" IsChecked="{Binding TrendsVisible.VisLine3}" HorizontalAlignment="Right" />
                                    </DockPanel>
                                    <!--#endregion-->
                                    <!--#region Процесс 1 - значение счетчика -->
                                    <DockPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Name="TrendName4">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource EnumCustomConverter}" StringFormat="{}{0} : Значение счетчика">
                                                        <Binding Path="mainModel.MeasResults[1].MeasProcessNum.Value" Mode="OneWay"/>
                                                        <Binding Path="MeasProcNames.Data" Mode="OneWay"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                            <Rectangle x:Name="trendColor4" Fill="Brown" Width="16" Margin="10,0,0,10" Height="16"/>
                                        </StackPanel>
                                        <CheckBox  x:Name="VisibleLine4" IsChecked="{Binding TrendsVisible.VisLine4}" HorizontalAlignment="Right" />
                                    </DockPanel>
                                    <!--#endregion-->
                                    <!--#region Процесс 1 - мгновенное значение -->
                                    <DockPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Name="TrendName5">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource EnumCustomConverter}" StringFormat="{}{0} : Мгновенное значение">
                                                        <Binding Path="mainModel.MeasResults[1].MeasProcessNum.Value" Mode="OneWay"/>
                                                        <Binding Path="MeasProcNames.Data" Mode="OneWay"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                            <Rectangle x:Name="trendColor5" Fill="Black" Width="16" Margin="10,0,0,10" Height="16"/>
                                        </StackPanel>
                                        <CheckBox  x:Name="VisibleLine5" IsChecked="{Binding TrendsVisible.VisLine5}" HorizontalAlignment="Right" />
                                    </DockPanel>
                                    <!--#endregion-->
                                    <!--#region Процесс 1 - усредненное значение -->
                                    <DockPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Name="TrendName6">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource EnumCustomConverter}" StringFormat="{}{0} : Усредненное значение">
                                                        <Binding Path="mainModel.MeasResults[1].MeasProcessNum.Value" Mode="OneWay"/>
                                                        <Binding Path="MeasProcNames.Data" Mode="OneWay"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                            <Rectangle x:Name="trendColor6" Fill="Pink" Width="16" Margin="10,0,0,10" Height="16"/>
                                        </StackPanel>
                                        <CheckBox  x:Name="VisibleLine6" IsChecked="{Binding TrendsVisible.VisLine6}" HorizontalAlignment="Right" />
                                    </DockPanel>
                                    <!--#endregion-->
                                    <!--#region Аналог 0 -->
                                    <DockPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="TrendName7" Text="Значение тока на AI0, мкA"/>
                                            <Rectangle x:Name="trendColor7" Fill="Yellow" Width="16" Margin="10,0,0,10" Height="16"/>
                                        </StackPanel>
                                        <CheckBox  x:Name="VisibleLine7" IsChecked="{Binding TrendsVisible.VisLine7}" HorizontalAlignment="Right" />
                                    </DockPanel>
                                    <!--#endregion-->
                                    <!--#region Аналог 1 -->
                                    <DockPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="TrendName8" Text="Значение тока на AI1, мкA"/>
                                            <Rectangle x:Name="trendColor8" Fill="Aqua" Width="16" Margin="10,0,0,10" Height="16"/>
                                        </StackPanel>
                                        <CheckBox  x:Name="VisibleLine8" IsChecked="{Binding TrendsVisible.VisLine8}" HorizontalAlignment="Right" />
                                    </DockPanel>
                                    <!--#endregion-->
                                    <!--#region HV -->
                                    <DockPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="TrendName9" Text="Значение HV, вольт"/>
                                            <Rectangle x:Name="trendColor9" Fill="Purple" Width="16" Margin="10,0,0,10" Height="16"/>
                                        </StackPanel>
                                        <CheckBox  x:Name="VisibleLine9" IsChecked="{Binding TrendsVisible.VisLine9}" HorizontalAlignment="Right" />
                                    </DockPanel>
                                    <!--#endregion-->
                                    <!--#region T -->
                                    <DockPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="TrendName10" Text="Значение температуры, С "/>
                                            <Rectangle x:Name="trendColor10" Fill="Orange" Width="16" Margin="10,0,0,10" Height="16"/>
                                        </StackPanel>
                                        <CheckBox  x:Name="VisibleLine10" IsChecked="{Binding TrendsVisible.VisLine10}" HorizontalAlignment="Right" />
                                    </DockPanel>
                                    <!--#endregion-->
                                </ListBox>
                            </TabItem>
                            <!--#endregion-->
                            <!--#region Архивный тренд -->
                            <TabItem Header="Архивный тренд">
                                <Grid>
                                    <Grid.Resources>
                                        <Style TargetType="Border" BasedOn="{StaticResource BorderLight}"/>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Common}"/>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>

                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.1*"/>
                                        <RowDefinition Height="0.1*"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <!--#region Тренд -->
                                    <uc:TrendControl Grid.Row="2"
                                                 Grid.ColumnSpan="6" 
                                                 DataSource="{Binding ArchivalDataPotnts}"
                                                 LineVisibility1="{Binding ElementName=VisibleLine1, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle1="{Binding ElementName=TrendName1, Path=Text}"
                                                 LineVisibility2="{Binding ElementName=VisibleLine2, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle2="{Binding ElementName=TrendName2, Path=Text}"
                                                 LineVisibility3="{Binding ElementName=VisibleLine3, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle3="{Binding ElementName=TrendName3, Path=Text}"
                                                 LineVisibility4="{Binding ElementName=VisibleLine4, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle4="{Binding ElementName=TrendName4, Path=Text}"
                                                 LineVisibility5="{Binding ElementName=VisibleLine5, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle5="{Binding ElementName=TrendName5, Path=Text}"
                                                 LineVisibility6="{Binding ElementName=VisibleLine6, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle6="{Binding ElementName=TrendName6, Path=Text}"
                                                 LineVisibility7="{Binding ElementName=VisibleLine7, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle7="{Binding ElementName=TrendName7, Path=Text}"
                                                 LineVisibility8="{Binding ElementName=VisibleLine8, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle8="{Binding ElementName=TrendName8, Path=Text}"
                                                 LineVisibility9="{Binding ElementName=VisibleLine9, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle9="{Binding ElementName=TrendName9, Path=Text}"
                                                 LineVisibility10="{Binding ElementName=VisibleLine10, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                 LineTitle10="{Binding ElementName=TrendName10, Path=Text}"/>
                                    <fa:ImageAwesome Grid.Row="2" Spin="{Binding ArchivalTrendDownloading}" Visibility="{Binding ArchivalTrendDownloading, Converter={StaticResource VisibleConverter}}"    Grid.ColumnSpan="6" Height="30"   Icon="Refresh" />
                                    <!--#endregion-->
                                    <!--#region Стартовая точка тренда -->
                                    <uc:DateTimeParameter Grid.ColumnSpan="2"
                                                      Description="Стартовая точка тренда"
                                                      PopupOpenedCommand="{Binding SelectDatesCommand}"
                                                      DateTimeWidth="180"
                                                      DateTime="{Binding DisplayDateStart, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                    <!--#endregion-->
                                    <!--#region Конечная точка тренда -->
                                    <uc:DateTimeParameter Grid.Column="2"
                                                      Grid.ColumnSpan="2"
                                                      PopupOpenedCommand="{Binding SelectDatesCommand}"
                                                      Description="Конечная точка тренда"
                                                      DateTimeWidth="180"
                                                      DateTime="{Binding DisplayDateEnd, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                    <!--#endregion-->
                                    <!--#region Кнопка "Показать тренд" -->
                                    <Button Grid.Column="4" Margin="2" Command="{Binding ShowArchivalTrendCommand}">
                                        <TextBlock  Text="Показать тренд" TextWrapping="Wrap"></TextBlock>
                                    </Button>
                                    <!--#endregion-->
                                    <!--#region Путь к файлу -->
                                    <Border Grid.Row="1" Grid.ColumnSpan="3" Margin="2">
                                        <TextBlock x:Name="LogPath" Text="{Binding LogPath, Mode=TwoWay}" VerticalAlignment="Center"></TextBlock>
                                    </Border>
                                    <!--#endregion-->
                                    <!--#region Кнопка Browse -->
                                    <Button Grid.Row="1" Click="BrowseLogPath" Grid.Column="3" Margin="2">
                                        <DockPanel>
                                            <fa:ImageAwesome Icon="FolderOutlinepenOutline" Margin="2"/>
                                            <TextBlock Text="Browse" Margin="2" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                                        </DockPanel>
                                    </Button>
                                    <!--#endregion-->
                                    <!--#region Кнопка "Запись" -->
                                    <Button Grid.Row="1" 
                                        Command="{Binding WriteLogCommand}" 
                                        HorizontalContentAlignment="Stretch" 
                                        Grid.Column="4" Margin="2" 
                                        IsEnabled="{Binding LogPath, Converter={StaticResource FileExistConverter}}">
                                        <DockPanel>
                                            <fa:ImageAwesome 
                                            Margin="2" 
                                            Visibility="{Binding ArchivalTrendUploading, Converter={StaticResource VisibleConverter}}" 
                                            Icon="Refresh" HorizontalAlignment="Center"                                             
                                            Spin="{Binding ArchivalTrendUploading}"/>
                                            <TextBlock Text="Запись" 
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"/>
                                        </DockPanel>
                                    </Button>
                                    <!--#endregion-->

                                </Grid>
                            </TabItem>
                            <!--#endregion-->
                        </TabControl>
                        <!--#endregion-->

                        <!--#region Числовая индикация ФВ -->
                        <ListBox ItemsSource="{Binding mainModel.MeasResults}"
                             Grid.Column="1"
                             HorizontalContentAlignment="Stretch"
                             VerticalContentAlignment="Stretch"
                             Grid.RowSpan="2">
                        </ListBox>

                        <!--#endregion-->

                        <!--#region Кнопки управления -->
                        <UniformGrid  Grid.Row="2" 
                                  Grid.Column="0" 
                                  Columns="2"
                                  Rows="2">
                            <!--#region Кнопка Вкл-выкл измерения -->
                            <Button Margin="5" 
                                Height="Auto"
                                Command="{Binding SwitchMeasCommand}" 
                                Background="{Binding mainModel.CycleMeasStatus.Value, Converter={StaticResource ColorToBool}, ConverterParameter=#FF6A5AcD}">

                                <TextBlock  Text="{Binding mainModel.CycleMeasStatus.Value, Converter={StaticResource StatusFromNum}, ConverterParameter={StaticResource measStatusBtn}}"
                                       IsEnabled="{Binding mainModel.Connecting}"
                                       TextWrapping="Wrap"/>
                            </Button>
                            <!--#endregion-->
                            <!--#region Напряжение HV -->
                            <Border Margin="5"
                                BorderThickness="2"
                                BorderBrush="WhiteSmoke">
                                <Grid>
                                    <TextBlock Text="Напряжение HV, вольт"/>
                                    <TextBlock Text="{Binding mainModel.TelemetryHV.VoltageCurOut.Value}"
                                           FontSize="40"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <!--#endregion-->
                            <!--#region Температура -->
                            <Border Margin="5"
                                BorderThickness="2"
                                BorderBrush="WhiteSmoke">
                                <Grid>
                                    <TextBlock Text="Температура прибора, С"/>
                                    <TextBlock Text="{Binding mainModel.TempTelemetry.TempInternal.Value, StringFormat=f1}"
                                           FontSize="40"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <!--#endregion-->
                        </UniformGrid>


                        <!--#endregion-->

                    </Grid>
                </TabItem>
                <!--#endregion-->
                <!--#region НАСТРОЙКИ -->
                <TabItem Header="НАСТРОЙКИ">
                    <TabItem.Resources>
                        <!--#region Общий стиль для DaraGrid -->
                        <Style TargetType="DataGrid">
                            <Setter Property="FontSize" Value="16"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="VerticalGridLinesBrush" Value="DarkGray"/>
                            <Setter Property="GridLinesVisibility" Value="Vertical"/>
                            <Setter Property="AlternatingRowBackground" Value="AliceBlue"/>
                            <Setter Property="AutoGenerateColumns" Value="False"/>
                        </Style>                    
                    <!--#endregion-->
                    </TabItem.Resources>
                    <TabControl TabStripPlacement="Left">
                        <!--#region Измерительные процессы -->
                        <TabItem Header="ИЗМЕРИТЕЛЬНЫЕ ПРОЦЕССЫ">
                            <TabControl TabStripPlacement="Top"
                                    ContentTemplate="{StaticResource TabItemMeasProc}"
                                    ItemsSource="{Binding mainModel.MeasProcSettings}">
                                <TabControl.ItemContainerStyle>
                                    <Style TargetType="TabItem"  BasedOn="{StaticResource MeasProcTabItemStyle}">
                                        <Setter Property="Header" Value="{Binding Num}"/>
                                        <Setter Property="HeaderStringFormat" Value="Процесс №{0}"/>
                                        <Setter Property="Tag" Value="{Binding IsActive.WriteValue}"/>
                                    </Style>
                                </TabControl.ItemContainerStyle>
                            </TabControl>
                        </TabItem>
                        <!--#endregion-->
                        <!--#region Счетчики -->
                        <TabItem Header="СЧЕТЧИКИ">
                            <UserControl Template="{StaticResource CountersTemplate}"/>
                        </TabItem>
                        <!--#endregion-->
                        <!--#region Общие настройки -->
                        <TabItem Header="ОБЩИЕ НАСТРОЙКИ">
                        <TabItem.Resources>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource Common}"/>
                        </TabItem.Resources>
                            <ListBox HorizontalContentAlignment="Stretch">
                                <uc:Parameter DataContext="{Binding mainModel.HalfLife}" Command="{Binding Command}"/>
                                <uc:Parameter DataContext="{Binding mainModel.DeviceName}" Command="{Binding Command}"/>
                                <uc:Parameter DataContext="{Binding mainModel.IsotopName}" Command="{Binding Command}"/>
                                <uc:Parameter DataContext="{Binding mainModel.DiameterPipe}" Command="{Binding Command}"/>
                                <DockPanel DataContext="{Binding mainModel.SourceInstallDate}">
                                <TextBlock Text="{Binding Description}"/>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                    <wpftool:DateTimePicker Width="120"
                                                                 
                                                                        Value="{Binding WriteValue, UpdateSourceTrigger=PropertyChanged}"
                                                                        HorizontalAlignment="Left"           
                                                                        FontWeight="Bold"
                                                                        Format="Custom"             
                                                                        FormatString="d"            
                                                                        TimeFormat="Custom"
                                                                        TimeFormatString="HH:mm:ss"                       
                                                                        Template="{StaticResource DateTimePickerTemplate}">
                                    </wpftool:DateTimePicker>
                                    <Button Width="50" Command="{Binding Command}">--></Button>
                                </StackPanel>
                            </DockPanel>
                            <DockPanel DataContext="{Binding mainModel.SourceExpirationDate}">
                                <TextBlock Text="{Binding Description}"/>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                    <wpftool:DateTimePicker Width="120"
                                                                 
                                                                        Value="{Binding WriteValue, UpdateSourceTrigger=PropertyChanged}"
                                                                        HorizontalAlignment="Left"           
                                                                        FontWeight="Bold"
                                                                        Format="Custom"             
                                                                        FormatString="d"            
                                                                        TimeFormat="Custom"
                                                                        TimeFormatString="HH:mm:ss"                       
                                                                        Template="{StaticResource DateTimePickerTemplate}">
                                    </wpftool:DateTimePicker>
                                    <Button Width="50" Command="{Binding Command}">--></Button>
                                </StackPanel>
                            </DockPanel>
                            <uc:Parameter DataContext="{Binding mainModel.SerialNumber}" Command="{Binding Command}"/>
                            <uc:Parameter DataContext="{Binding mainModel.OrderNumber}" Command="{Binding Command}"/>
                            <uc:Parameter DataContext="{Binding mainModel.DeviceType}" Command="{Binding Command}"/>
                            <uc:Parameter DataContext="{Binding mainModel.FwVersion}" Command="{Binding Command}"/>
                            <uc:Parameter DataContext="{Binding mainModel.CustNumber}" Command="{Binding Command}"/>
                        </ListBox>
                        </TabItem>
                        <!--#endregion-->
                        <!--#region Аналоги -->
                        <TabItem Header="АНАЛОГОВЫЕ МОДУЛИ">
                            <TabItem.Resources>
                                <DataTemplate x:Key="AnalogHeaderTemplate">
                                    <TextBlock TextWrapping="Wrap">
                                        <TextBlock.Text>
                                            <Binding/>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DataTemplate>
                            </TabItem.Resources>
                            <StackPanel >
                                <!--#region Аналоговые входы -->
                                <GroupBox  Header="АНАЛОГОВЫЕ ВХОДЫ">
                                    <DataGrid AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" ItemsSource="{Binding AnalogInputs}">
                                        <DataGrid.Columns>
                                            <!--#region Id -->
                                            <DataGridTextColumn IsReadOnly="True"  Header="№" Binding="{Binding GroupNum}"/>
                                            <!--#endregion-->
                                            <!--#region Питание -->
                                            <DataGridTemplateColumn Header="Питание">
                                                <DataGridTemplateColumn.CellTemplate >
                                                    <DataTemplate DataType="add:AnalogInput">
                                                        <Button Content="{Binding CommState.Value, Converter={StaticResource StatusFromNum}, ConverterParameter={StaticResource PwrBtnStatus}}"
                                                                Background="{Binding CommState.Value, Converter={StaticResource ColorToBool}}"
                                                                Command="{Binding SwitchPwrAmCommand}"></Button>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--#endregion-->
                                            <!--#region АЦП -->
                                            <DataGridTextColumn Header="Ток AI, мкА" Binding="{Binding AdcValue.Value}" IsReadOnly="True"/>
                                            <!--#endregion-->
                                            <!--#region Активность -->
                                            <DataGridTemplateColumn Width="120" Header="Активность АЦП" HeaderTemplate="{StaticResource AnalogHeaderTemplate}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate DataType="add:AnalogInput">
                                                        <ComboBox ItemsSource="{StaticResource On/Off}" SelectedIndex="{Binding Activity.Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="DropDownClosed">
                                                                    <i:InvokeCommandAction Command="{Binding SetSettingsCommand}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </ComboBox>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--#endregion-->
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </GroupBox>
                                <!--#endregion-->
                                <!--#region AO -->
                                <GroupBox Header="АНАЛОГОВЫЕ ВЫХОДЫ">
                                    <DataGrid AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" ItemsSource="{Binding AnalogOutputs}">
                                        <DataGrid.Columns>
                                            <!--#region Id -->
                                            <DataGridTextColumn IsReadOnly="True"  Header="№" Binding="{Binding GroupNum}"/>
                                            <!--#endregion-->
                                            <!--#region Питание -->
                                            <DataGridTemplateColumn Header="Питание">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate DataType="add:AnalogOutput">
                                                        <Button Content="{Binding CommState.Value, Converter={StaticResource StatusFromNum}, ConverterParameter={StaticResource PwrBtnStatus}}"
                                                                Background="{Binding CommState.Value, Converter={StaticResource ColorToBool}}"
                                                                Command="{Binding SwitchPwrAmCommand}" ></Button>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--#endregion-->
                                            <!--#region ЦАП -->
                                            <DataGridTextColumn IsReadOnly="True"
                                                            HeaderTemplate="{StaticResource AnalogHeaderTemplate}"
                                                            Header="Напряжение ЦАП, каунтов"
                                                            Binding="{Binding VoltageDac.Value}" 
                                                            Width="120"/>
                                            <!--#endregion-->
                                            <!--#region Напряжение TEST, мВ -->
                                            <DataGridTextColumn IsReadOnly="True"
                                                            Header="Напряжение TEST, каунтов"
                                                            HeaderTemplate="{StaticResource AnalogHeaderTemplate}"
                                                            Width="120" 
                                                            Binding="{Binding AdcValue.Value}"/>
                                            <!--#endregion-->
                                            <!--#region Напряжение RX, мВ -->
                                            <DataGridTextColumn Width="120"
                                                            IsReadOnly="True" 
                                                            Header="Напряжение RX, каунтов"
                                                            HeaderTemplate="{StaticResource AnalogHeaderTemplate}"
                                                            Binding="{Binding VoltageTest.Value}"/>
                                            <!--#endregion-->
                                            <!--#region Тестовое значение, мВ -->
                                            <DataGridTemplateColumn Width="135"
                                                                HeaderTemplate="{StaticResource AnalogHeaderTemplate}"
                                                                Header="Тестовое значение, мкА">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate DataType="add:AnalogOutput">
                                                        <DockPanel>
                                                            <StackPanel Orientation="Horizontal" DataContext="{Binding AmTestValue}">
                                                                <TextBox  Width="50" HorizontalAlignment="Left">
                                                                    <TextBox.Text>
                                                                        <Binding Path="WriteValue" UpdateSourceTrigger="PropertyChanged">
                                                                            <Binding.ValidationRules>
                                                                                <DataErrorValidationRule />
                                                                            </Binding.ValidationRules>
                                                                        </Binding>
                                                                    </TextBox.Text>
                                                                </TextBox>
                                                                <Button Width="50" Margin="2,0,2,0" Command="{Binding Command}">--></Button>
                                                            </StackPanel>
                                                        </DockPanel>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--#endregion-->
                                            <!--#region Активность -->
                                            <DataGridTemplateColumn Width="120"
                                                                HeaderTemplate="{StaticResource AnalogHeaderTemplate}"
                                                                Header="Активность ЦАП">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ComboBox ItemsSource="{StaticResource On/Off}" SelectedIndex="{Binding Activity.WriteValue, UpdateSourceTrigger=PropertyChanged}">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="DropDownClosed">
                                                                    <i:InvokeCommandAction Command="{Binding SetSettingsCommand}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </ComboBox>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--#endregion-->
                                            <!--#region Тип ЦАП -->
                                            <DataGridTemplateColumn Width="120"
                                                                HeaderTemplate="{StaticResource AnalogHeaderTemplate}"
                                                                Header="Тип значения">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate DataType="add:AnalogOutput">
                                                        <ComboBox ItemsSource="{StaticResource DacSources}" SelectedIndex="{Binding DacType.WriteValue, UpdateSourceTrigger=PropertyChanged}">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="DropDownClosed">
                                                                    <i:InvokeCommandAction Command="{Binding SetSettingsCommand}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </ComboBox>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--#endregion-->
                                            <!--#region Единица измерения -->
                                            <DataGridTemplateColumn Width="120"
                                                                HeaderTemplate="{StaticResource AnalogHeaderTemplate}"
                                                                Header="Единица измерения">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate DataType="add:AnalogOutput">
                                                        <ComboBox Width="150"
                                                              SelectedItem="{Binding MeasUnit,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                              HorizontalAlignment="Left"                                  
                                                              DisplayMemberPath="MeasUnitName.Value"
                                                              ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.AvialableMeasUnitSettings}">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="DropDownOpened">
                                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.UpdateAvialablemeasUnitCommand}"/>
                                                                </i:EventTrigger>
                                                                <i:EventTrigger EventName="DropDownClosed">
                                                                    <i:InvokeCommandAction Command="{Binding SetSettingsCommand}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </ComboBox>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--#endregion-->
                                            <!--#region Номер изм. процесса -->
                                            <DataGridTemplateColumn Header="№ изм. процесса" Width="200">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <uc:MenuItemParameterText DataContext="{Binding AnalogMeasProcNdx}"
                                                                              Command="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.SetSettingsCommand}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--#endregion-->
                                            <DataGridTemplateColumn Width="120"
                                                                HeaderTemplate="{StaticResource AnalogHeaderTemplate}"
                                                                Header="Тип переменной">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <uc:MenuItemCompoboxParameter DataContext="{Binding VarNdx}"
                                                                                  CompoboxWidth="100"                                                                                  
                                                                                  Index="{Binding WriteValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                                                  Command="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.SetSettingsCommand}"
                                                                                  ItemSource="{StaticResource VarTypes}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>

                                            </DataGridTemplateColumn>
                                            <!--#region Нижний предел переменной -->
                                            <DataGridTemplateColumn Header="Нижний предел переменной" 
                                                                Width="200" 
                                                                HeaderTemplate="{StaticResource AnalogHeaderTemplate}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <uc:MenuItemParameterText DataContext="{Binding DacLowLimit}"
                                                                              Command="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.SetSettingsCommand}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--#endregion-->
                                            <!--#region Верхний предел переменной -->
                                            <DataGridTemplateColumn Header="Верхний предел переменной" 
                                                                Width="200" 
                                                                HeaderTemplate="{StaticResource AnalogHeaderTemplate}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <uc:MenuItemParameterText DataContext="{Binding DacHighLimit}"
                                                                              Command="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.SetSettingsCommand}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--#endregion-->
                                            <!--#region Нижний предел переменной(mA) -->
                                            <DataGridTemplateColumn Header="Нижний предел тока" 
                                                                Width="200" 
                                                                HeaderTemplate="{StaticResource AnalogHeaderTemplate}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <uc:MenuItemParameterText DataContext="{Binding DacLowLimitMa}"
                                                                              Command="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.SetSettingsCommand}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--#endregion-->

                                            <!--#region Верхний предел тока -->
                                            <DataGridTemplateColumn Header="Верхний предел тока" 
                                                                Width="200" 
                                                                HeaderTemplate="{StaticResource AnalogHeaderTemplate}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <uc:MenuItemParameterText DataContext="{Binding DacHighLimitMa}"
                                                                              Command="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.SetSettingsCommand}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--#endregion-->
                                        </DataGrid.Columns>

                                    </DataGrid>
                                </GroupBox>
                                <!--#endregion-->
                            </StackPanel>
                        </TabItem>
                        <!--#endregion-->
                        <!--#region ЕДИНИЦЫ ИЗМЕРЕНИЯ -->
                        <TabItem Header="ЕДИНИЦЫ ИЗМЕРЕНИЯ">
                            <DataGrid ItemsSource="{Binding mainModel.MeasUnitSettings}">
                                <DataGrid.RowStyle>
                                    <Style TargetType="DataGridRow">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding A.Value}" Value="0"/>
                                                    <Condition Binding="{Binding B.Value}" Value="0"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Opacity" Value="0.25"/>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.RowStyle>
                                <DataGrid.Columns>
                                    <!--#region Id -->
                                    <DataGridTextColumn IsReadOnly="True" Header="№" Binding="{Binding Id.Value}"/>
                                    <!--#endregion-->
                                    <!--#region № по классификации -->
                                    <DataGridTemplateColumn Width="200">
                                        <DataGridTemplateColumn.Header>
                                            <TextBlock Text="№ по классификации" TextWrapping="Wrap"/>
                                        </DataGridTemplateColumn.Header>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <uc:MenuItemParameterText DataContext="{Binding MeasUnitClassNum}"
                                                                      Command="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.SetMeasUnitCommand}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <!--#endregion-->
                                    <!--#region Тип -->
                                    <DataGridTemplateColumn Width="200">
                                        <DataGridTemplateColumn.Header>
                                            <TextBlock Text="Тип ЕИ" TextWrapping="Wrap"/>
                                        </DataGridTemplateColumn.Header>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <uc:MenuItemParameterText DataContext="{Binding Type}"
                                                                      Command="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.SetMeasUnitCommand}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <!--#endregion-->
                                    <!--#region A -->
                                    <DataGridTemplateColumn Header="Коэффициент A">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <uc:MenuItemParameterText DataContext="{Binding A}" Command="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.SetMeasUnitCommand}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <!--#endregion-->
                                    <!--#region B -->
                                    <DataGridTemplateColumn Header="Коэффициент B">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <uc:MenuItemParameterText DataContext="{Binding B}" Command="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.SetMeasUnitCommand}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <!--#endregion-->
                                    <!--#region Имя -->
                                    <DataGridTemplateColumn Header="Название">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <uc:MenuItemParameterText DataContext="{Binding MeasUnitName}" Command="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=DataContext.SetMeasUnitCommand}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <!--#endregion-->
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>
                        <!--#endregion-->
                        <!--#region Настройки платы HV -->
                        <TabItem Header="ПЛАТА HV" >
                            <ListBox HorizontalContentAlignment="Stretch" >
                                <!--#region Уставка напряжения -->
                                <uc:Parameter DataContext="{Binding mainModel.TelemetryHV.VoltageSV}" 
                                          Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.SetHvCommand}" />
                                <!--#endregion-->
                                <!--#region Входное напряжение -->
                                <uc:Parameter DataContext="{Binding mainModel.TelemetryHV.VoltageCurIn}"/>
                                <!--#endregion-->
                                <!--#region Выходное напряжение -->
                                <uc:Parameter DataContext="{Binding mainModel.TelemetryHV.VoltageCurOut}"/>
                                <!--#endregion-->
                                <!--#region Индикатор связи -->
                                <UserControl DataContext="{Binding mainModel.TelemetryHV.HvCommState}" 
                                             Template="{StaticResource BitIndicator}"/>
                                <!--#endregion-->
                                <!--#region Кнопка включения-выключения HV -->
                                <DockPanel>
                                    <TextBlock Style="{StaticResource Common}" 
                                               Text="Управление Высоким напряжением"/>
                                    <Button Width="220" Height="Auto" HorizontalAlignment="Right"
                                            Background="{Binding mainModel.TelemetryHV.HvOn.Value, Converter={StaticResource ColorToBool}, ConverterParameter=#FFFF0000}"
                                            Command="{Binding SwitchHvCommand}">
                                        <TextBlock TextWrapping="Wrap" 
                                                   Text="{Binding mainModel.TelemetryHV.HvOn.Value, Converter={StaticResource StatusFromNum}, ConverterParameter={StaticResource HvButn}}"/>
                                    </Button>
                                </DockPanel>
                                <!--#endregion-->
                            </ListBox>
                        </TabItem>
                        <!--#endregion-->
                        <!--#region Плата питания -->
                        <TabItem Header="ПЛАТА ПИТАНИЯ">
                            <ListBox HorizontalContentAlignment="Stretch">
                                <!--#region Температура -->
                                <ListBoxItem DataContext="{Binding mainModel.TempTelemetry.TempInternal}" >
                                    <uc:Parameter/>
                                </ListBoxItem>
                                <!--#endregion-->

                                <!--#region Индикатор связи -->
                                <ListBoxItem DataContext="{Binding mainModel.TempTelemetry.TempBoardCommState}">
                                    <UserControl Template="{StaticResource BitIndicator}"/>
                                </ListBoxItem>
                                <!--#endregion-->
                            </ListBox>
                        </TabItem>
                        <!--#endregion-->
                        <!--#region Плата АЦП -->
                        <TabItem Header="ПЛАТА АЦП" >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ListBox>
                                    <!--#region Индикатор связи -->
                                    <ListBoxItem HorizontalContentAlignment="Stretch">
                                        <UserControl Template="{StaticResource BitIndicator}" DataContext="{Binding mainModel.AdcBoard.CommState}"/>
                                    </ListBoxItem>
                                    <!--#endregion-->
                                    <!--#region Режим работы АЦП -->
                                    <ListBoxItem HorizontalContentAlignment="Stretch" DataContext="{Binding mainModel.AdcBoardSettings.AdcMode}">
                                        <uc:CompoboxParameter ItemSource="{StaticResource AdcModes}"
                                                      Index="{Binding WriteValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                      CompoboxWidth="220"
                                                      Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.mainModel.AdcBoardSettings.SetAdcModeChangeCommand}"/>
                                    </ListBoxItem>
                                    <!--#endregion-->
                                    <!--#region Режим синхронизации  -->
                                    <ListBoxItem HorizontalContentAlignment="Stretch" DataContext="{Binding mainModel.AdcBoardSettings.AdcSyncMode}">
                                        <uc:CompoboxParameter ItemSource="{StaticResource AdcSyncModes}"
                                                      Index="{Binding WriteValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                      CompoboxWidth="220"
                                                      Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.mainModel.AdcBoardSettings.SetAdcSyncModeChangeCommand}"/>
                                    </ListBoxItem>
                                    <!--#endregion-->
                                    <!--#region Режим обработки при регистрировании максимальных амплитуд  -->
                                    <ListBoxItem HorizontalContentAlignment="Stretch" DataContext="{Binding mainModel.AdcBoardSettings.AdcProcMode}">
                                        <uc:CompoboxParameter ItemSource="{StaticResource AdcProcModes}"
                                                      Index="{Binding WriteValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                      CompoboxWidth="220"
                                                      Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.mainModel.AdcBoardSettings.SetAdcProcModeChangeCommand}"/>
                                    </ListBoxItem>
                                    <!--#endregion-->
                                    <!--#region Уровень синхронизации -->
                                    <ListBoxItem HorizontalContentAlignment="Stretch" 
                                         DataContext="{Binding mainModel.AdcBoardSettings.AdcSyncLevel}">
                                        <uc:Parameter Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.mainModel.AdcBoardSettings.SetAdcSyncLevelChangeCommand}"/>

                                    </ListBoxItem>
                                    <!--#endregion-->
                                    <!--#region к-т предусиления -->
                                    <ListBoxItem HorizontalContentAlignment="Stretch"
                                             DataContext="{Binding mainModel.AdcBoardSettings.PreampGain}">
                                        <uc:Parameter Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.mainModel.AdcBoardSettings.SetPreampGainChangeCommand}"/>
                                    </ListBoxItem>
                                    <!--#endregion-->
                                    <!--#region Таймнр выдачи данных -->
                                    <ListBoxItem HorizontalContentAlignment="Stretch" 
                                         DataContext="{Binding mainModel.AdcBoardSettings.TimerMax}">
                                        <uc:Parameter Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.mainModel.AdcBoardSettings.SetTimerMaxChangeCommand}"/>

                                    </ListBoxItem>
                                    <!--#endregion-->
                                    <!--#region Запуск/останов платы АЦП -->
                                    <ListBoxItem HorizontalContentAlignment="Stretch">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Button Margin="5,0,5,0"
                                            Command="{Binding StartAdcCommand}"
                                            CommandParameter="1"
                                            Content="Включить плату АЦП"/>
                                            <Button Margin="5,0,5,0"
                                            Command="{Binding StartAdcCommand}"
                                            CommandParameter="0"
                                            Grid.Column="1"
                                            Content="Выключить плату АЦП"/>
                                        </Grid>
                                    </ListBoxItem>
                                    <!--#endregion-->
                                    <!--#region Запуск/останов выдачи данных АЦП  -->
                                    <ListBoxItem HorizontalContentAlignment="Stretch">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Button Margin="5,0,5,0"
                                            Command="{Binding StartAdcDataCommand}"
                                            CommandParameter="1"
                                            Content="Старт выдачи данных АЦП"/>
                                            <Button Margin="5,0,5,0"
                                            Command="{Binding StartAdcDataCommand}"
                                            CommandParameter="0"
                                            Grid.Column="1"
                                            Content="Стоп выдачи данных АЦП"/>
                                        </Grid>
                                    </ListBoxItem>
                                    <!--#endregion-->
                                </ListBox>
                                <!--#region График -->
                                <UserControl Grid.Row="1"
                                 Template="{StaticResource AdcTrend}">
                                </UserControl>
                                <!--#endregion-->

                            </Grid>

                        </TabItem>
                        <!--#endregion-->
                        <!--#region ДАТА И ВРЕМЯ -->
                        <TabItem Header="ДАТА И ВРЕМЯ">
                            <ListBox HorizontalContentAlignment="Stretch">
                                <ListBox.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource Common}"/>
                                </ListBox.Resources>
                                <!--#region Реадктирование rtc -->
                                <ListBoxItem>
                                    <DockPanel>
                                        <TextBlock Text="{Binding mainModel.Rtc.Description}"/>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                            <wpftool:DateTimePicker Name="Dt" Value="{Binding mainModel.Rtc.WriteValue}" Margin="1,0,1,0"></wpftool:DateTimePicker>
                                            <Button Command="{Binding SetRtcCommand}" Width="50" Margin="1,0,1,0">--></Button>
                                        </StackPanel>
                                    </DockPanel>
                                </ListBoxItem>
                                <!--#endregion-->
                                <!--#region Синхронизация с временем ПК -->
                                <ListBoxItem>
                                    <DockPanel>
                                        <TextBlock Text="Синхронизировать с временем ПК"></TextBlock>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                            <TextBlock Margin="1,0,1,0"  Width="{Binding ElementName=Dt, Path=ActualWidth}" 
                                                       Text="{Binding CurPcDateTime, StringFormat=F,   UpdateSourceTrigger=PropertyChanged, ConverterCulture=ru-RU,  Mode=OneWay}"
                                                       HorizontalAlignment="Center"></TextBlock>
                                            <Button Command="{Binding SyncRtcCommand}" Width="50" Margin="1,0,1,0">--></Button>
                                        </StackPanel>
                                    </DockPanel>
                                </ListBoxItem>
                                <!--#endregion-->
                            </ListBox>
                        </TabItem>
                        <!--#endregion-->
                        <TabItem Header="КОММУНИКАЦИЯ">
                            <Grid>
                                <ListBox HorizontalContentAlignment="Stretch" >
                                    <ListBox.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Common}"/>
                                    </ListBox.Resources>
                                    <!--#region Способ связи с платой -->
                                    <GroupBox  Header="Способ связи с платой">
                                        <StackPanel>
                                            <RadioButton GroupName="comm" Command="{Binding TcpDisconnectCommand}"  IsChecked="{Binding mainModel.CommMode.RsEnable}"  Content="RS-485(Modbus RTU)"/>
                                            <RadioButton GroupName="comm"  IsChecked="{Binding mainModel.CommMode.EthEnable}" Content="Ethernet (TCP)"/>
                                            <RadioButton GroupName="comm"  IsChecked="{Binding mainModel.CommMode.HartEnable}" Content="HART"  IsEnabled="False"/>
                                        </StackPanel>
                                    </GroupBox>
                                    <!--#endregion-->
                                    <!--#region Параметры RS485 -->
                                    <GroupBox  Header="Настройки RS-485" HorizontalAlignment="Stretch">
                                        <!--#region Параметры RS485 -->
                                        <ListBox>
                                            <!--#region Имя COM порта -->
                                            <ListBoxItem HorizontalContentAlignment="Stretch">
                                                <Grid>
                                                    <TextBlock Style="{StaticResource Common}" Text="Имя COM порта" HorizontalAlignment="Left"></TextBlock>
                                                    <ComboBox Width="80" HorizontalAlignment="Right" ItemsSource="{Binding ComPorts}" SelectedItem="{Binding mainModel.rs.ComName}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="DropDownOpened">
                                                                <i:InvokeCommandAction Command="{Binding UpdateComPortListCommand}"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </ComboBox>
                                                </Grid>
                                            </ListBoxItem>
                                            <!--#endregion-->
                                            <!--#region Скорость передачи даных, бит/c -->
                                            <ListBoxItem HorizontalContentAlignment="Stretch">
                                                <Grid>
                                                    <TextBlock Style="{StaticResource Common}" Text="Скорость передачи даных, бит/c" HorizontalAlignment="Left"></TextBlock>
                                                    <ComboBox  Width="80"   ItemsSource="{StaticResource PortSpeedsInt}"  SelectedItem="{Binding mainModel.rs.BaudRate}"  HorizontalAlignment="Right"/>
                                                </Grid>
                                            </ListBoxItem>
                                            <!--#endregion-->
                                            <!--#region Паритет-->
                                            <ListBoxItem HorizontalContentAlignment="Stretch">
                                                <Grid>
                                                    <TextBlock Style="{StaticResource Common}" Text="Паритет" HorizontalAlignment="Left"></TextBlock>
                                                    <ComboBox    Width="80"  ItemsSource="{StaticResource parityes}"    SelectedItem="{Binding mainModel.rs.Par}" HorizontalAlignment="Right"></ComboBox>
                                                </Grid>
                                            </ListBoxItem>
                                            <!--#endregion-->
                                            <!--#region Адрес устройства в сети Modbus -->
                                            <ListBoxItem HorizontalContentAlignment="Stretch">
                                                <Grid>
                                                    <TextBlock Style="{StaticResource Common}" Text="Адрес устройства в сети Modbus" HorizontalAlignment="Left"></TextBlock>
                                                    <TextBox Text="{Binding mainModel.rs.MbAddr}" HorizontalContentAlignment="Center" Width="80" HorizontalAlignment="Right"></TextBox>
                                                </Grid>
                                            </ListBoxItem>
                                            <!--#endregion-->
                                        </ListBox>
                                        <!--#endregion-->
                                    </GroupBox>
                                    <!--#endregion-->
                                    <!--#region Параметры  Ethernet-->
                                    <GroupBox Header="Настройки Ethernet(TCP) соединения">
                                        <ListBox HorizontalContentAlignment="Stretch">
                                            <ListBoxItem Content="{Binding mainModel.Tcp.IP, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  HorizontalAlignment="Stretch" Template="{StaticResource TextBoxParameter}"  Tag="IP адрес устройства"></ListBoxItem>
                                            <ListBoxItem Content="{Binding mainModel.Tcp.PortNum, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Stretch" Template="{StaticResource TextBoxParameter}"  Tag="Номер порта"></ListBoxItem>
                                            <ListBoxItem Content="{Binding mainModel.Tcp.Pause, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Stretch" Template="{StaticResource TextBoxParameter}"  Tag="Пауза между запросами, мс."></ListBoxItem>
                                            <DockPanel>
                                                <TextBlock Text="Циклический опрос" Style="{StaticResource Common}"/>
                                                <CheckBox IsChecked="{Binding mainModel.Tcp.CycicRequest}" HorizontalAlignment="Right"/>
                                            </DockPanel>
                                            <!--#region IP адрес udp приемника -->
                                            <ListBoxItem HorizontalContentAlignment="Stretch">
                                                <DockPanel>
                                                    <TextBlock Text="Адрес приемника данных по UDP(IP, порт)"
                                               VerticalAlignment="Center"
                                               Style="{StaticResource Common}"/>
                                                    <StackPanel Orientation="Horizontal"
                                                HorizontalAlignment="Right">
                                                        <TextBox Text="{Binding mainModel.UdpAddrString, UpdateSourceTrigger=PropertyChanged}"
                                                 MinWidth="100"
                                                 HorizontalContentAlignment="Center"
                                                 VerticalContentAlignment="Center"/>
                                                        <TextBox Text="{Binding mainModel.PortUdp, UpdateSourceTrigger=PropertyChanged}"
                                                 MinWidth="100"
                                                 HorizontalContentAlignment="Center"
                                                 VerticalContentAlignment="Center"/>
                                                        <Button Width="50"
                                                Margin="5,0,5,0"
                                                Command="{Binding SetUpsAddrCommand}"
                                                Content="-->"/>
                                                    </StackPanel>
                                                </DockPanel>
                                            </ListBoxItem>
                                            <!--#endregion-->
                                        </ListBox>
                                    </GroupBox>
                                    <!--#endregion-->
                                    <!--#region Настройки Ethernet порта в плате -->
                                    <GroupBox Header="НАСТРОЙКИ ETHERNET ПОРТА (В ПЛАТЕ)">
                                        <ListBox HorizontalContentAlignment="Stretch">
                                            <DockPanel>
                                                <TextBlock Text="Ip адрес"/>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                    <TextBox Width="110"
                                                         HorizontalContentAlignment="Center"
                                                         VerticalContentAlignment="Center"
                                                         Text="{Binding mainModel.IP}"/>
                                                    <Button Width="50"
                                                        Command="{Binding WriteEthParamsCommand}"
                                                        Margin="4,0,0,0"
                                                        Content="-->"/>
                                                </StackPanel>
                                            </DockPanel>
                                            <DockPanel>
                                                <TextBlock Text="Маска подсети"/>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                    <TextBox Width="110"
                                                         HorizontalContentAlignment="Center"
                                                         VerticalContentAlignment="Center"
                                                         Text="{Binding mainModel.Mask}"/>
                                                    <Button Width="50"
                                                        Command="{Binding WriteEthParamsCommand}"
                                                        Margin="4,0,0,0"
                                                        Content="-->"/>
                                                </StackPanel>
                                            </DockPanel>
                                            <DockPanel>
                                                <TextBlock Text="Сетевой шлюз"/>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                    <TextBox Width="110"
                                                         HorizontalContentAlignment="Center"
                                                         VerticalContentAlignment="Center"
                                                         Text="{Binding mainModel.GateWay}"/>
                                                    <Button Width="50"
                                                        Command="{Binding WriteEthParamsCommand}"
                                                        Margin="4,0,0,0"
                                                        Content="-->"/>
                                                </StackPanel>
                                            </DockPanel>
                                        </ListBox>
                                    </GroupBox>

                                    <!--#endregion-->
                                    <!--#region Настройки последовательного порта плотномера -->
                                    <GroupBox Header="Настройки последовательного порта плотномера">
                                        <ListBox HorizontalContentAlignment="Stretch">
                                            <!--#region Баудрейт -->
                                            <ListBoxItem DataContext="{Binding mainModel.PortBaudrate}">
                                                <uc:CompoboxParameter CompoboxWidth="80"
                                                                  ItemSource="{StaticResource PortSpeeds}"
                                                                  SelectedItem="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                                  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.ChangeBaudrateCommand}"
                                                                  CommanDParameter="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem}"/>
                                            </ListBoxItem>
                                            <!--#endregion-->
                                            <!--#region Режим работы -->
                                            <ListBoxItem DataContext="{Binding mainModel.PortSelectMode}">
                                                <uc:CompoboxParameter CompoboxWidth="80"
                                                                  ItemSource="{StaticResource PortModes}"
                                                                  Index="{Binding Value}"
                                                                  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.ChangeSerialSelectCommand}"
                                                                  CommanDParameter="{Binding RelativeSource={RelativeSource Self}, Path=Index}"/>
                                            </ListBoxItem>

                                            <!--#endregion-->
                                        </ListBox>
                                    </GroupBox>
                                    <!--#endregion-->
                                    <!--#region Кнопка перезагрузить плату -->
                                    <Button Width="200"
                                                Height="60"
                                                HorizontalAlignment="Left"
                                                Command="{Binding RstBoardCommand}">
                                        <TextBlock Text="ПЕРЕЗАГРУЗИТЬ ПЛАТУ"/>
                                    </Button>
                                    <!--#endregion-->
                                </ListBox>
                            </Grid>
                        </TabItem>
                        <!--#region События -->
                    <TabItem Header="СОБЫТИЯ" Visibility="{Binding CurUser, Converter={StaticResource UserToVisibility}, ConverterParameter=Администратор}">
                            <DataGrid ItemsSource="{Binding Events.EventDevices}" 
                                        AutoGenerateColumns="False"                                        
                                        CanUserAddRows="False">
                                <DataGrid.Columns>
                                    <!--#region ID -->
                                    <DataGridTextColumn Header="Id" Binding="{Binding Id}" IsReadOnly="True"/>
                                    <!--#endregion-->
                                    <DataGridTextColumn Header="Номер" Binding="{Binding Num, StringFormat=d4}"></DataGridTextColumn>
                                    <!--#region Заголовок -->
                                    <DataGridTextColumn Header="Заголовок" Binding="{Binding Title}"/>
                                    <!--#endregion-->
                                    <!--#region Описание события -->
                                    <DataGridTextColumn Header="Описание события" Binding="{Binding Description}" />
                                    <!--#endregion-->
                                    <!--#region Активный фон -->
                                    <DataGridTemplateColumn Width="120">
                                        <DataGridTemplateColumn.Header>
                                            <TextBlock Text="Активный фон"
                                                   TextWrapping="Wrap"/>
                                        </DataGridTemplateColumn.Header>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <wpftool:ColorPicker SelectedColor="{Binding ActiveColor, UpdateSourceTrigger=LostFocus}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <!--#endregion-->
                                    <!--#region Неактивный фон -->
                                    <DataGridTemplateColumn Width="120">
                                        <DataGridTemplateColumn.Header>
                                            <TextBlock Text="Неактивный фон"
                                                   TextWrapping="Wrap"/>
                                        </DataGridTemplateColumn.Header>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <wpftool:ColorPicker SelectedColor="{Binding NotActiveColor, UpdateSourceTrigger=LostFocus}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Тип" Width="120">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{StaticResource EventTypes}" SelectedIndex="{Binding Type, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridCheckBoxColumn Binding="{Binding IsActive, UpdateSourceTrigger=PropertyChanged}"/>
                                    <!--#endregion-->
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>
                        <!--#endregion-->
                        <!--#region Управление пользователями -->
                        <TabItem Header="ПОЛЬЗОВАТЕЛИ" Visibility="{Binding CurUser, Converter={StaticResource UserToVisibility}, ConverterParameter=Администратор}">
                            <DataGrid  ItemsSource="{Binding Users.Data}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Логин" Binding="{Binding Login}"/>
                                    <DataGridTextColumn Header="Имя" Binding="{Binding Path=Name}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Фамилия" Binding="{Binding Path=Somename}"></DataGridTextColumn>
                                    <DataGridComboBoxColumn Header="Уровень доступа" ItemsSource="{StaticResource users}" SelectedItemBinding="{Binding Path=Level}" ></DataGridComboBoxColumn>
                                    <DataGridTextColumn Header="Пароль" Binding="{Binding Password}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>
                        <!--#endregion-->
                        <!--#region Перечисления -->
                    <TabItem Header="ПЕРЕЧИСЛЕНИЯ" Visibility="{Binding CurUser, Converter={StaticResource UserToVisibility}, ConverterParameter=Администратор}">
                            <TabItem.Resources>
                                <!--#region Общий шаблон для таблички -->
                                <ControlTemplate x:Key="Enums">
                                    <GroupBox Header="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Tag}">
                                        <DataGrid ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"   >
                                            <DataGrid.Columns>
                                                <DataGridTextColumn  Header="Id" Binding="{Binding Id}" IsReadOnly="True"></DataGridTextColumn>
                                                <DataGridTextColumn Header="Name" Binding="{Binding Name}"></DataGridTextColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </GroupBox>

                                </ControlTemplate>
                                <!--#endregion-->
                            </TabItem.Resources>
                            <WrapPanel>
                                <!--#region Названия Источников компенсаций -->
                                <DataGrid Template="{StaticResource Enums}" DataContext="{Binding MeasTypesNamesNames.Data}" Tag="Типы измерений"></DataGrid>
                                <!--#endregion-->
                                <!--#region Названия Источников компенсаций -->
                                <DataGrid Template="{StaticResource Enums}" DataContext="{Binding CompensationSrcNames.Data}" Tag="Источники компенсаций"></DataGrid>
                                <!--#endregion-->
                                <!--#region Названия Типов калибровок -->
                                <DataGrid Template="{StaticResource Enums}" DataContext="{Binding TypeCalibrations.Data}" Tag="Типы калибровок"></DataGrid>
                                <!--#endregion-->
                                <!--#region Единицы измерения -->
                                <DataGrid Template="{StaticResource Enums}" DataContext="{Binding UnitNames.Data}" Tag="Единицы измерения"></DataGrid>
                                <!--#endregion-->
                                <!--#region Название измерительных процессов -->
                                <DataGrid Template="{StaticResource Enums}" DataContext="{Binding MeasProcNames.Data}" Tag="Измерительные процессы"></DataGrid>
                                <!--#endregion-->
                            </WrapPanel>

                        </TabItem>
                        <!--#endregion-->
                        <!--#region Параметры -->
                    <TabItem Header="ПАРАМЕТРЫ" Visibility="{Binding CurUser, Converter={StaticResource UserToVisibility}, ConverterParameter=Администратор}">
                            <TabItem.Resources>
                                <add:ParamList x:Key="paramsList"/>
                            </TabItem.Resources>
                            <DataGrid ItemsSource="{Binding Source={StaticResource paramsList}, Path=ParameterList}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Id" Binding="{Binding Id}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Описание" Binding="{Binding Description}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Мин. величина" Binding="{Binding MinValue}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Макс. величина" Binding="{Binding MaxValue}"></DataGridTextColumn>
                                    
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>
                        <!--#endregion-->
                    </TabControl>
                </TabItem>
                <!--#endregion-->
                <!--#region Управление -->
                <TabItem Header="УПРАВЛЕНИЕ">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.3*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="0.4*"/>
                        </Grid.ColumnDefinitions>
                        <!--#region Параметры -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <!--#region Первая группа параметров-->
                            <ListBox Grid.Column="0" HorizontalContentAlignment="Stretch">
                                <!--#region Уровень синхронизации -->
                                <uc:Parameter  DataContext="{Binding mainModel.AdcBoardSettings.AdcSyncLevel}" 
                                               Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.mainModel.AdcBoardSettings.SetAdcSyncLevelChangeCommand}"/>
                                <!--#endregion-->
                                <!--#region к-т предусиления -->
                                <uc:Parameter  DataContext="{Binding mainModel.AdcBoardSettings.PreampGain}" 
                                           Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.mainModel.AdcBoardSettings.SetPreampGainChangeCommand}"/>
                                <!--#endregion-->
                                <!--#region Таймнр выдачи данных -->
                                <uc:Parameter DataContext="{Binding mainModel.AdcBoardSettings.TimerMax}" 
                                          Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.mainModel.AdcBoardSettings.SetTimerMaxChangeCommand}"/>
                                <!--#endregion-->
                            </ListBox>
                            <!--#endregion-->
                            <!--#region Вторая группа параметров -->
                            <ListBox Grid.Column="1" HorizontalContentAlignment="Stretch">
                                <!--#region Уставка напряжения -->
                                <uc:Parameter DataContext="{Binding mainModel.TelemetryHV.VoltageSV}"  Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.SetHvCommand}" />
                                <!--#endregion-->
                                <!--#region Выходное напряжение -->
                                <uc:Parameter DataContext="{Binding mainModel.TelemetryHV.VoltageCurOut}"/>
                                <!--#endregion-->
                                <!--#region Кнопка включения-выключения HV -->
                                <DockPanel>
                                    <TextBlock Style="{StaticResource Common}" 
                                               Text="Управление Высоким напряжением"/>
                                    <Button Width="220" Height="Auto" HorizontalAlignment="Right"
                                            Background="{Binding mainModel.TelemetryHV.HvOn.Value, Converter={StaticResource ColorToBool}, ConverterParameter=#FFFF0000}"
                                            Command="{Binding SwitchHvCommand}">
                                        <TextBlock TextWrapping="Wrap" 
                                                   Text="{Binding mainModel.TelemetryHV.HvOn.Value, Converter={StaticResource StatusFromNum}, ConverterParameter={StaticResource HvButn}}"/>
                                    </Button>
                                </DockPanel>
                                <!--#endregion-->
                            </ListBox>
                            <!--#endregion-->
                        </Grid>
                        <!--#endregion-->
                        <!--#region Кнопки -->

                        <UniformGrid Grid.Column="1"
                                 Rows="3">
                            <!--#region Показать осциллограмму -->
                            <Button Height="Auto"
                                Margin="5"
                                Command="{Binding ShowOscillCommand}"
                                Content="ПОКАЗАТЬ ОСЦИЛЛОГРАММУ"/>
                            <!--#endregion-->
                            <!--#region Показать спектр -->
                            <Button Height="Auto"
                                Margin="5"
                                Command="{Binding ShowSpectrCommand}"
                                Content="ПОКАЗАТЬ СПЕКТР"/>
                            <!--#endregion-->
                            <!--#region Очистить спектр -->
                            <Button Height="Auto"
                                Margin="5"
                                Command="{Binding ClearSpectrCommand}"
                                Content="ОЧИСТИТЬ СПЕКТР"/>
                            <!--#endregion-->
                        </UniformGrid>
                        <!--#endregion-->
                        <!--#region График -->
                        <UserControl Grid.Row="1"
                                 Template="{StaticResource AdcTrend}">
                        </UserControl>
                        <!--<uc:TrendAdc Grid.Row="1"
                                 Mode="{Binding Udp.Mode}"
                                 Collection="{Binding AdcDataTrend}"
                                 LowAnnotation="{Binding SelectedCountDiapasone.Start.Value}"
                                 HighLineAnnotation="{Binding SelectedCountDiapasone.Finish.Value}"/>
                    -->
                        <!--#endregion-->
                        <!--#region Счетчик -->
                        <StackPanel Grid.Row="1" Grid.Column="1">
                            <UserControl  Template="{StaticResource CountersTemplate}"/>
                            <GroupBox Header="ЗАПИСЬ СПЕКТРА">
                                <ListBox HorizontalContentAlignment="Stretch">
                                    <!--#region Путь -->
                                    <DockPanel >
                                        <TextBlock x:Name="SpectrLogPath" 
                                               Text="{Binding SpetrLogPath, TargetNullValue=Нажмите Browse чтобы указать путь, Mode=TwoWay}"
                                               Foreground="WhiteSmoke"
                                               Background="Transparent"/>
                                        <Button Width="100"
                                            Click="SpectrLogPathShow"
                                            Content="Browse"
                                            HorizontalAlignment="Right"/>
                                    </DockPanel>
                                    <!--#endregion-->
                                    <Button Content="Запись"
                                        Command="{Binding StartStopSpectrLogCommand}"
                                        Background="{Binding IsSpectrLogging, Converter={StaticResource ColorToBool}, ConverterParameter=ffff0000}"></Button>
                                </ListBox>
                            </GroupBox>
                        </StackPanel>
                        <!--#endregion-->
                    </Grid>
                </TabItem>
                <!--#endregion-->
                <!--#region События -->
                <TabItem Header="СОБЫТИЯ">
                    <TabControl TabStripPlacement="Top">
                        <TabItem Header="ВСЕ СОБЫТИЯ">
                            <Grid>
                                <Grid.Resources>
                                    <CollectionViewSource x:Key="EventsCollection" Source="{Binding HistoryEventItems}"/>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <!--#region Панель фильтров -->
                                <Grid Grid.Row="0">
                                    <UniformGrid Columns="5">
                                        <uc:DateTimeParameter Description="Начальная точка событий"
                                              DateTimeWidth="200"
                                              Margin="2"
                                              DateTime="{Binding StartPointHistoryEvent, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                        <uc:DateTimeParameter Description="Конечная точка событий"
                                              DateTimeWidth="200"                                              
                                              Margin="2"
                                              DateTime="{Binding EndPointHistoryEvent, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                        <Button Margin="2"
                                            VerticalContentAlignment="Center"
                                            Command="{Binding ShowEventsCommand}"
                                           >
                                            <Button.Content>
                                                <StackPanel Orientation="Horizontal">
                                                    <fa:ImageAwesome Width="20" 
                                                                 Icon="Refresh" 
                                                                 Foreground="AliceBlue" 
                                                                 Spin="{Binding HistoryItemDownloading}" 
                                                                 Visibility="{Binding HistoryItemDownloading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                    <TextBlock Text="Показать" VerticalAlignment="Center"
                                                           HorizontalAlignment="Center"/>
                                                </StackPanel>
                                            </Button.Content>
                                        </Button>
                                        <Border Margin="2" Style="{StaticResource BorderLight}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="0.1*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBox HorizontalContentAlignment="Left"
                                                     VerticalContentAlignment="Center"
                                                     Text="{Binding EventFilterText, UpdateSourceTrigger=PropertyChanged}"/>
                                                <fa:ImageAwesome Grid.Column="1" Icon="Search" Width="20" Foreground="AliceBlue"/>
                                            </Grid>
                                        </Border>
                                    </UniformGrid>
                                </Grid>
                                <!--#endregion-->
                                <!--#region Таблица всех событий -->
                                <DataGrid Grid.Row="1" 
                                      IsReadOnly="True" 
                                      AutoGenerateColumns="False" 
                                      ItemsSource="{Binding SelectedEventItems}" 
                                      VirtualizingPanel.VirtualizationMode="Recycling"
                                      CanUserAddRows="False" 
                                      CanUserDeleteRows="False">
                                    <DataGrid.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel/>
                                        </ItemsPanelTemplate>
                                    </DataGrid.ItemsPanel>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="DataGridRow" BasedOn="{StaticResource EventRowStyle}"/>
                                    </DataGrid.RowStyle>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Время возникновения ошибки" Binding="{Binding EventTime, StringFormat=F,ConverterCulture=ru-RU}"/>
                                        <DataGridTextColumn Header="Пользователь" Binding="{Binding UserName}"/>
                                        <DataGridTextColumn Header="Код события" Binding="{Binding Event.Num, StringFormat=d4}"/>
                                        <DataGridTextColumn Header="Сообщение" Binding="{Binding Event.Title}"/>
                                        <DataGridTextColumn Header="Активность" Binding="{Binding Activity, Converter={StaticResource StatusFromNum}, ConverterParameter={StaticResource Activities}}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <!--#endregion-->
                            </Grid>
                        </TabItem>
                        <TabItem Header="ОШИБКИ">
                            <ListView ItemsSource="{Binding Events.EventDevices}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Background" Value="{Binding ActiveBrush}"/>
                                        <Setter Property="Visibility" Value="{Binding IsActive, Converter={StaticResource VisibleConverter}}"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Номер" DisplayMemberBinding="{Binding Num, StringFormat=d4}"/>
                                        <GridViewColumn Header="Сообщение" DisplayMemberBinding="{Binding Title}"/>
                                        <GridViewColumn Header="Время" DisplayMemberBinding="{Binding LastExecDate}"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </TabItem>
                    </TabControl>

                </TabItem>

                <!--#endregion-->
            </TabControl>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.1*" ></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <!--#endregion-->        
    </Grid>
        <!--#endregion-->   
</Window>
