<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                     xmlns:dt="clr-namespace:IDensity.Core.Views.UserControls.DateTimes" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ControlTemplate TargetType="{x:Type xctk:DateTimePicker}" x:Key="DateTimePickerTemplate">
        <Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="0.3*"/>
                </Grid.ColumnDefinitions>
                <!--<xctk:ButtonSpinner/>-->
                <xctk:ButtonSpinner HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"   x:Name="PART_Spinner" ShowButtonSpinner="False"  AllowSpin="False" BorderThickness="0" Background="Transparent" IsTabStop="False" >

                    <!--I removed setters of Background and Foreground properties here-->
                    <xctk:WatermarkTextBox  x:Name="PART_TextBox"  AcceptsReturn="False" Foreground="White" BorderThickness="0" HorizontalAlignment="Left"    FontSize="16" FontFamily="Roboto" HorizontalContentAlignment="Left" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="20" Padding="0" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="NoWrap" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="{TemplateBinding TabIndex}"  Watermark="{TemplateBinding Watermark}">
                        <xctk:WatermarkTextBox.Template>
                            <ControlTemplate TargetType="{x:Type xctk:WatermarkTextBox}">
                                <Grid>
                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="1"/>
                                    <Border x:Name="MouseOverVisual" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#FF5794BF" Offset="0.05"/>
                                                <GradientStop Color="#FFB7D5EA" Offset="0.07"/>
                                                <GradientStop Color="#FFC7E2F1" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                    <Border x:Name="FocusVisual" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#FF3D7BAD" Offset="0.05"/>
                                                <GradientStop Color="#FFA4C9E3" Offset="0.07"/>
                                                <GradientStop Color="#FFB7D9ED" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <ContentPresenter  x:Name="PART_WatermarkHost" ContentTemplate="{TemplateBinding WatermarkTemplate}" Content="{TemplateBinding Watermark}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsFocused" Value="False"/>
                                            <Condition Property="Text" Value=""/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Visibility" TargetName="PART_WatermarkHost" Value="Visible"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" TargetName="MouseOverVisual" Value="1"/>
                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="Opacity" TargetName="FocusVisual" Value="1"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="BorderBrush" TargetName="Border" Value="#FFADB2B5"/>
                                        <!--I changed Background setter value to White here-->
                                        <Setter Property="Background" TargetName="Border" Value="White"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </xctk:WatermarkTextBox.Template>
                    </xctk:WatermarkTextBox>
                </xctk:ButtonSpinner>
                <ToggleButton x:Name="_calendarToggleButton" Margin="4" HorizontalAlignment="Center" MaxHeight="25" MaxWidth="25" HorizontalContentAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"   Foreground="Transparent" Grid.Column="1" Focusable="False" IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton.IsHitTestVisible>
                        <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <xctk:InverseBoolConverter/>
                            </Binding.Converter>
                        </Binding>
                    </ToggleButton.IsHitTestVisible>
                    <ToggleButton.IsEnabled>
                        <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <xctk:InverseBoolConverter/>
                            </Binding.Converter>
                        </Binding>
                    </ToggleButton.IsEnabled>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Grid SnapsToDevicePixels="True">
                                            <xctk:ButtonChrome x:Name="ToggleButtonChrome"  BorderBrush="Transparent" BorderThickness="0" Background="Transparent">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                                                    <Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" HorizontalAlignment="Center" >
                                                        <Image x:Name="Arrow" Source="..\Pictures\Arrow.png" HorizontalAlignment="Center" Margin="2"/>
                                                    </Grid>
                                                </Grid>
                                            </xctk:ButtonChrome>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </Grid>
            <Popup x:Name="PART_Popup" IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}" StaysOpen="False" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Opened">
                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=dt:DateTimeParameter}, Path=PopupOpenedCommand}" CommandParameter="{Binding ElementName=PART_Calendar}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Border BorderThickness="0" Padding="3">
                    <StackPanel>
                        <Calendar x:Name="PART_Calendar" BorderThickness="0"  Language="ru-RU" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="DisplayDateChanged">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=dt:DateTimeParameter}, Path=PopupOpenedCommand}" CommandParameter="{Binding ElementName=PART_Calendar}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Calendar>
                        <xctk:TimePicker x:Name="PART_TimeUpDown" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" ClipValueToMinMax="{Binding ClipValueToMinMax, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" FormatString="{TemplateBinding TimeFormatString}" Format="{TemplateBinding TimeFormat}" Maximum="{Binding Maximum, RelativeSource={RelativeSource TemplatedParent}}" Minimum="{Binding Minimum, RelativeSource={RelativeSource TemplatedParent}}" Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" WatermarkTemplate="{TemplateBinding TimeWatermarkTemplate}" Watermark="{TemplateBinding TimeWatermark}"/>
                    </StackPanel>
                </Border>
            </Popup>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>