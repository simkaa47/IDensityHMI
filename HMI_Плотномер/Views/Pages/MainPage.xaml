<UserControl x:Class="IDensity.Core.Views.Pages.MainPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:IDensity.ViewModels"
             xmlns:mr="clr-namespace:IDensity.Core.Views.UserControls.MeasResults"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:trends="clr-namespace:IDensity.Core.Views.UserControls.Trends"
             xmlns:dt="clr-namespace:IDensity.Core.Views.UserControls.DateTimes"
             xmlns:wpftool="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:IDensity.Core.Views.Pages"             
             mc:Ignorable="d" 
             xmlns:fa="http://schemas.fontawesome.io/icons/"   
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             d:DataContext="{d:DesignInstance Type=vm:VM}"
             d:DesignHeight="1080" d:DesignWidth="1920">
    <Canvas Background="Transparent">
        <Canvas.Resources>
            <Style TargetType="Border" x:Key="SelectedBoeder">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource AquaColor}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderNonActiveColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="mr:MiddleMeasResult1" x:Key="MeasSingleIndicatorContainer">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ViewSettings.AvgVisibility}" Value="False"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ViewSettings.CurVisibility}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ViewSettings.AvgVisibility}" Value="True"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ViewSettings.CurVisibility}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Canvas.Resources>
        <!--#region Trends -->
        <TabControl  Canvas.Top="0" Canvas.Left="0" TabStripPlacement="Bottom" Width="948" Height="565" BorderThickness="0" DataContext="{Binding MeasResultsVM}">
            <!--#region Current Trend -->
            <TabItem Header="Текущий тренд" MinHeight="64" MinWidth="253" FontSize="20">

                <!--#region Current Trend-->
                <trends:MainTrendControl DataSource="{Binding PlotCollection}" Margin="24,24,0,0"  Width="924"                                              
                                                     LineVisibility1="{Binding TrendsVisible.VisLine1, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle1="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=0}"
                                                     LineVisibility2="{Binding TrendsVisible.VisLine2, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle2="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=1}"
                                                     LineVisibility3="{Binding TrendsVisible.VisLine3, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle3="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=2}"
                                                     LineVisibility4="{Binding TrendsVisible.VisLine4, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle4="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=3}"
                                                     LineVisibility5="{Binding TrendsVisible.VisLine5, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle5="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=4}"
                                                     LineVisibility6="{Binding TrendsVisible.VisLine6, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle6="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=5}"
                                                     LineVisibility7="{Binding TrendsVisible.VisLine7, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle7="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=6}"
                                                     LineVisibility8="{Binding TrendsVisible.VisLine8, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle8="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=7}"
                                                     LineVisibility9="{Binding TrendsVisible.VisLine9, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle9="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=8}"
                                                     LineVisibility10="{Binding TrendsVisible.VisLine10, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle10="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=9}"/>
                <!--#endregion-->
            </TabItem>
            <!--#endregion-->
            <!--#region Trend Settings -->
            <TabItem Header="Настройки отображения" MinWidth="362" MinHeight="64" FontSize="20" Style="{StaticResource TabItemStyleSecond}">
                <trends:TrendSettingsControl Margin="24,24,0,0"/>
            </TabItem>
            <!--#endregion-->
            <!--#region Archieve trends -->
            <TabItem Header="Архивный тренд" MinHeight="64" FontSize="20" MinWidth="270" Style="{StaticResource TabItemStyleSecond}">
                <Canvas Background="Transparent">
                    <!--#region Start Time Selection-->
                    <dt:DateTimeParameter Description="Стартовая точка тренда"
                                                  Height="56" Canvas.Bottom="0" Canvas.Left="24"
                                                  Width="211"
                                                  PopupOpenedCommand="{Binding SelectDatesCommand}"                                                        
                                                  DateTime="{Binding DisplayDateStart, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <!--#endregion-->
                    <!--#region Finish Time Selection-->
                    <dt:DateTimeParameter   Height="56" Width="211"
                                            Canvas.Bottom="0" Canvas.Left="251"
                                                    Description="Конечная точка тренда"
                                                    PopupOpenedCommand="{Binding SelectDatesCommand}"                                                      
                                                    DateTime="{Binding DisplayDateEnd, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <!--#endregion-->
                    <!--#region File Browse-->
                    <Border Canvas.Bottom="0" Canvas.Left="478" Background="#16FFFFFF" CornerRadius="4,4,0,0" Width="141" Height="56" BorderThickness="0,0,0,2" Style="{StaticResource SelectedBoeder}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="0.5*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="LogPath" Text="{Binding LogPath, Mode=TwoWay}" 
                                       FontSize="16"
                                       TextWrapping="Wrap" Foreground="#B1FFFFFF" 
                                       FontFamily="Roboto"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                            <Image Margin="2" Grid.Column="1" Source="..\Resourses\Pictures\DriveFileMove.png"
                                           MouseLeftButtonDown="BrowseLogPath" Height="24"/>
                        </Grid>
                    </Border>
                    <!--#endregion-->
                    <!--#region Write Button -->
                    <Border Height="56" Width="121"  BorderThickness="0,0,0,2" Style="{StaticResource SelectedBoeder}"
                            Canvas.Bottom="0" Canvas.Left="635"
                                    IsEnabled="{Binding LogPath, Converter={StaticResource FileExistConverter}}"
                                   
                                    Background="#16FFFFFF" CornerRadius="4,4,0,0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding WriteLogCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="0.5*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Запись" 
                                               TextWrapping="Wrap" Foreground="#B1FFFFFF" 
                                               VerticalAlignment="Center"
                                               FontSize="16"
                                                Opacity="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource GetIfTrue}, ConverterParameter={StaticResource Opacities}}"
                                               HorizontalAlignment="Center"/>
                            <Image Margin="0,0,8,0" Grid.Column="1" Source="..\Resourses\Pictures\SystemUpdateAlt.png" Height="24"
                                           Visibility="{Binding ArchivalTrendUploading, Converter={StaticResource VisibleIfEqual}, ConverterParameter=False}"/>
                            <fa:ImageAwesome Grid.Column="1"
                                                Margin="2" 
                                                Foreground="#16FFFFFF"
                                                Visibility="{Binding ArchivalTrendUploading, Converter={StaticResource VisibleConverter}}" 
                                                Icon="Refresh" HorizontalAlignment="Center" MaxHeight="25"                                             
                                                Spin="{Binding ArchivalTrendUploading}"/>
                        </Grid>
                    </Border>
                    <!--#endregion-->
                    <!--#region ShowTrendButton -->
                    <Button   Height="56" Width="174" Canvas.Bottom="0" Canvas.Left="772"                              
                              BorderThickness="1"
                              Style="{StaticResource ButtonWithBackgroundAbdBorder}"                              
                              Background="Transparent" 
                              BorderBrush="{StaticResource AquaColor}"
                              FontSize="16" FontWeight="Medium"
                             Command="{Binding ShowArchivalTrendCommand}">
                        <TextBlock Text="Показать тренд"
                                   Foreground="White"/>
                    </Button>
                    <!--#endregion-->
                    <!--#region Trend -->
                    <trends:MainTrendControl DataSource="{Binding ArchivalDataPotnts}"  Height="360"   Width="924"  Margin="24,24,0,0"                                             
                                                     LineVisibility1="{Binding TrendsVisible.VisLine1, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle1="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=0}"
                                                     LineVisibility2="{Binding TrendsVisible.VisLine2, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle2="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=1}"
                                                     LineVisibility3="{Binding TrendsVisible.VisLine3, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle3="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=2}"
                                                     LineVisibility4="{Binding TrendsVisible.VisLine4, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle4="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=3}"
                                                     LineVisibility5="{Binding TrendsVisible.VisLine5, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle5="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=4}"
                                                     LineVisibility6="{Binding TrendsVisible.VisLine6, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle6="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=5}"
                                                     LineVisibility7="{Binding TrendsVisible.VisLine7, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle7="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=6}"
                                                     LineVisibility8="{Binding TrendsVisible.VisLine8, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle8="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=7}"
                                                     LineVisibility9="{Binding TrendsVisible.VisLine9, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle9="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=8}"
                                                     LineVisibility10="{Binding TrendsVisible.VisLine10, Converter={StaticResource VisibleConverter}}"
                                                     LineTitle10="{Binding Source={StaticResource CurveNames}, Converter={StaticResource GetByIndex}, ConverterParameter=9}"/>
                    <!--#endregion-->
                    <!--#region Load Indicator -->
                    <fa:ImageAwesome Foreground="{StaticResource AquaColor}" Canvas.Bottom="250" Canvas.Left="460"   Spin="{Binding ArchivalTrendDownloading}" Visibility="{Binding ArchivalTrendDownloading, Converter={StaticResource VisibleConverter}}"  Height="30"   Icon="Refresh" />
                    <!--#endregion-->
                </Canvas>
            </TabItem>
            <!--#endregion-->

        </TabControl>
        <!--#endregion-->
        <!--#region Indication -->
        <Border Canvas.Left="24" Canvas.Top="656" Height="184" Width="920" Background="{StaticResource PanelBorderColor}">
            <Grid>                
                <!--#region Temperature sensor indication -->
                <StackPanel VerticalAlignment="Top" HorizontalAlignment="Left" Width="160" Margin="50,42,0,0">
                    <TextBlock Text="ТЕМПЕРАТУРА ПРИБОРА, °С" Foreground="{StaticResource AquaColor}" FontSize="15" 
                               HorizontalAlignment="Left" 
                               TextWrapping="Wrap"
                                FontWeight="Medium"                                
                               VerticalAlignment="Bottom"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <TextBlock  Text="{Binding mainModel.TempTelemetry.TempInternal.Value, StringFormat=f1, ConverterCulture=RU-ru}" 
                                Name="InternalTempIndicator"
                                Foreground="{Binding mainModel.TempTelemetry.OverTemp, Converter={StaticResource GetIfTrue}, ConverterParameter={StaticResource InternalTempColors}}"  
                               HorizontalAlignment="Center"
                               FontSize="48"
                                Margin="0,16,0,0"
                                FontWeight="Medium"                                
                                FontFamily="Roboto"
                               VerticalAlignment="Top"/>
                        <Image Source="..\Resourses\Pictures\AlertReportProblemRed.png"  Height="40" Visibility="{Binding mainModel.TempTelemetry.OverTemp, Converter={StaticResource VisibleConverter}}"/>
                    </StackPanel>
                </StackPanel>
                <!--#endregion-->
                <!--#region HV indication -->
                <StackPanel Width="120"  VerticalAlignment="Top" HorizontalAlignment="Left" Margin="225,42,0,0">
                    <TextBlock Text="НАПРЯЖЕНИЕ HV, В"
                               Foreground="{StaticResource AquaColor}" 
                               FontSize="15" 
                               TextWrapping="Wrap"
                               HorizontalAlignment="Left"
                                FontWeight="Medium"/>
                    <TextBlock  Grid.Row="1" Text="{Binding mainModel.TelemetryHV.VoltageCurOut.Value , ConverterCulture=RU-ru}" Foreground="White"  
                               HorizontalAlignment="Left"
                               FontSize="48"  
                                Margin="0,16,0,0"
                                FontWeight="Medium"
                                FontFamily="Roboto"
                               VerticalAlignment="Top"/>
                </StackPanel>
                <!--#endregion-->
                <!--#region Count Pulse indication -->
                <StackPanel Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Width="200" Margin="422,42,0,0">
                    <TextBlock Text="КОЛИЧЕСТВО ИМПУЛЬСОВ В СЕКУНДУ"
                               Foreground="{StaticResource AquaColor}" 
                               FontSize="15" 
                               TextWrapping="Wrap"
                               HorizontalAlignment="Left"
                                FontWeight="Medium"/>
                    <TextBlock  Grid.Row="1" Text="{Binding mainModel.MeasResults[0].CounterValue.Value, StringFormat=f1, ConverterCulture=RU-ru}" Foreground="White"
                               FontSize="48"       
                                Margin="0,16,0,0"
                                FontWeight="Medium"
                                HorizontalAlignment="Left"
                                FontFamily="Roboto"
                               VerticalAlignment="Top"/>
                </StackPanel>
                <!--#endregion-->
                <!--#region Switch measuring button -->
                <Button Width="178"
                        Height="95"
                        Margin="0,0,48,0"
                        BorderBrush="{StaticResource AquaColor}"
                        BorderThickness="1"
                        Style="{StaticResource CommonButton}" 
                        Background="{Binding mainModel.CycleMeasStatus.Value, Converter={StaticResource GetIfTrue}, ConverterParameter={StaticResource ButtonsMeasSwitchColors}}"
                        FontSize="20"
                        FontStretch="Expanded"
                        FontFamily="..\Resourses\Fonts\#Roboto Medium"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"                       
                        Command="{Binding SwitchMeasCommand}">
                    <Button.Content>
                        <TextBlock Text="{Binding mainModel.CycleMeasStatus.Value, Converter={StaticResource GetIfTrue}, ConverterParameter={StaticResource measStatusBtn}}"
                                   TextWrapping="Wrap" 
                                   FontFamily="..\Resourses\Fonts\#Roboto Medium">
                            <TextBlock.LayoutTransform>
                                <ScaleTransform ScaleX="1.0" ScaleY="1.15"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Button.Content>
                </Button>
                <!--#endregion-->
            </Grid>
            
        </Border>
       
       
        
        <!--#endregion-->
        <!--#region MEas Indication -->
        <Grid Canvas.Left="960" Height="880" Width="950">
            <StackPanel>
                <mr:BigIndicator DataContext="{Binding mainModel.MeasResults[0]}"
                                 Visibility="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.mainModel.MeasResults[1].IsActive, Converter={StaticResource VisibleIfEqual}, ConverterParameter=False}"
                                 ViewSettings="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.MeasResultsVM.MeasResultSetts[0]}"
                                 IndicatorColor="#32d74b"/>
                <StackPanel>
                    <StackPanel.Visibility>
                        <MultiBinding Converter="{StaticResource MultiVisibleConverter}">
                            <Binding  Path="mainModel.MeasResults[0].IsActive" Converter="{StaticResource VisibleIfEqual}" ConverterParameter="True"/>
                            <Binding  Path="mainModel.MeasResults[1].IsActive" Converter="{StaticResource VisibleIfEqual}" ConverterParameter="True"/>
                        </MultiBinding>
                    </StackPanel.Visibility>
                    <mr:MiddleMeasResult2 DataContext="{Binding mainModel.MeasResults[0]}"                                 
                                          ViewSettings="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.MeasResultsVM.MeasResultSetts[0]}"
                                          IndicatorColor="#32d74b">                        
                    </mr:MiddleMeasResult2>
                    <mr:MiddleMeasResult1 ViewSettings="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.MeasResultsVM.MeasResultSetts[0]}"
                                      IndicatorColor="#32d74b" 
                                      Style="{StaticResource MeasSingleIndicatorContainer}"
                                      DataContext="{Binding mainModel.MeasResults[0]}"/>
                    <mr:MiddleMeasResult2 DataContext="{Binding mainModel.MeasResults[1]}" 
                                          Margin="0,28,0,0"
                                          ViewSettings="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.MeasResultsVM.MeasResultSetts[1]}"
                                          IndicatorColor="#64d2ff"/>
                    
                    <mr:MiddleMeasResult1 ViewSettings="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.MeasResultsVM.MeasResultSetts[1]}"
                                      IndicatorColor="#64d2ff" 
                                      Style="{StaticResource MeasSingleIndicatorContainer}"
                                      DataContext="{Binding mainModel.MeasResults[1]}"/>
                </StackPanel>
                

            </StackPanel>
           


        </Grid>
        
        
        <!--#endregion-->
    </Canvas>    
</UserControl>
